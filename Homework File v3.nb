(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200326,       3841]
NotebookOptionsPosition[    192190,       3705]
NotebookOutlinePosition[    192785,       3727]
CellTagsIndexPosition[    192742,       3724]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "x", ",", "fx1", ",", "fx2", ",", "fx3", ",", "pfx1", ",", "pfx2", ",", 
   "pfx3"}], "]"}]], "Input",
 CellChangeTimes->{{3.776081574767993*^9, 3.7760816014549417`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a6b9d518-61b5-43d1-9741-cc10bdc3e5b9"],

Cell[CellGroupData[{

Cell["Problem 1", "Item",
 CellChangeTimes->{{3.7760856305999317`*^9, 
  3.7760856374742026`*^9}},ExpressionUUID->"5e683786-21e0-41fb-a4a9-\
842a055f327b"],

Cell[CellGroupData[{

Cell["2.b.", "Subitem",
 CellChangeTimes->{{3.7760856305999317`*^9, 
  3.776085648900905*^9}},ExpressionUUID->"2cbc9ae7-84f0-4360-be3e-\
728b33cea420"],

Cell["Define the pdfs as function.", "Subsubitem",
 CellChangeTimes->{{3.7760856305999317`*^9, 
  3.7760856598495197`*^9}},ExpressionUUID->"c57a9421-8c19-48bd-8372-\
9f9c5fb3a88c"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fx1", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SqrtBox[
      RowBox[{"2", "*", "Pi"}]], "2"}]], 
   SuperscriptBox["E", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "4"}], ")"}], "2"]}], 
     RowBox[{"2", "*", 
      SuperscriptBox["2", "2"]}]]]}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"fx2", "[", "x_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", "*", "Pi"}]], "3"}]], 
    SuperscriptBox["E", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "6"}], ")"}], "2"]}], 
      RowBox[{"2", "*", 
       SuperscriptBox["3", "2"]}]]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fx3", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SqrtBox[
      RowBox[{"2", "*", "Pi"}]], "2"}]], 
   SuperscriptBox["E", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "5"}], ")"}], "2"]}], 
     RowBox[{"2", "*", 
      SuperscriptBox["2", "2"]}]]]}]}]}], "Input",
 CellChangeTimes->{{3.77607503709699*^9, 3.7760750624957933`*^9}, {
   3.776075113664196*^9, 3.776075115429799*^9}, {3.7760751694830155`*^9, 
   3.7760753389262094`*^9}, {3.776075377006309*^9, 3.7760754194265966`*^9}, 
   3.776076580422785*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"3d0daf5c-5f1e-437f-80f0-8385104cbf51"],

Cell["\<\
Solve for the intersection between each of the decision regions\
\>", "Subsubitem",
 CellChangeTimes->{{3.776085666529603*^9, 
  3.7760856890852537`*^9}},ExpressionUUID->"f8904613-c286-42c1-b922-\
3590291993a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"fx2", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"fx1", "[", "x", "]"}]}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"fx3", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"fx1", "[", "x", "]"}]}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"fx3", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"fx2", "[", "x", "]"}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.776078130158675*^9, 3.7760781613832617`*^9}, {
  3.7760782179690332`*^9, 3.7760782390032434`*^9}, {3.7760798616016197`*^9, 
  3.7760799094962316`*^9}, {3.7760799518179173`*^9, 3.7760799748676233`*^9}, {
  3.776085693377069*^9, 3.7760857117102413`*^9}},
 FontSlant->"Italic",
 CellLabel->"In[5]:=",ExpressionUUID->"eaa75cce-84f2-4b96-b53c-d9218d836fd1"],

Cell[BoxData[
 TemplateBox[{
  "NSolve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"NSolve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,5,1,27831556194203905687,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7761616057845755`*^9, 3.776182660151712*^9, 
  3.7765011576546955`*^9, 3.776503645372071*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"c2592b51-e705-4c17-8063-73966b7f1ef2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.0056860625661854`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "5.805686062566186`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7760799107804365`*^9, 3.7760799769792647`*^9, 
  3.7760816487653894`*^9, 3.776085717911838*^9, 3.776161606065815*^9, 
  3.7761826601673374`*^9, 3.7765011576703215`*^9, 3.776503645372071*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"be80783c-cd10-4021-b82f-a2869f6d05ee"],

Cell[BoxData[
 TemplateBox[{
  "NSolve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"NSolve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,6,2,27831556194203905687,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7761616057845755`*^9, 3.776182660151712*^9, 
  3.7765011576546955`*^9, 3.7765036454345684`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"c8a1edf4-c253-4f1b-a332-3ae369e8520b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "4.5`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7760799107804365`*^9, 3.7760799769792647`*^9, 
  3.7760816487653894`*^9, 3.776085717911838*^9, 3.776161606065815*^9, 
  3.7761826601673374`*^9, 3.7765011576703215`*^9, 3.7765036454501934`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1441db65-6a36-4aa0-8420-ce51d18cba2b"],

Cell[BoxData[
 TemplateBox[{
  "NSolve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"NSolve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,7,3,27831556194203905687,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7761616057845755`*^9, 3.776182660151712*^9, 
  3.7765011576546955`*^9, 3.7765036454814415`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"2d424f3d-7807-4a0f-84d5-cea4b3188a6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.502093856940615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.897906143059385`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7760799107804365`*^9, 3.7760799769792647`*^9, 
  3.7760816487653894`*^9, 3.776085717911838*^9, 3.776161606065815*^9, 
  3.7761826601673374`*^9, 3.7765011576703215`*^9, 3.7765036454970675`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"18663145-d292-4713-aa8b-d6f4158db246"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Region 2 is bounded between x=-\[Infinity] and x=-1.00569.", \
"Subsubitem",
 CellChangeTimes->{{3.7760857538659286`*^9, 
  3.7760857834584417`*^9}},ExpressionUUID->"8a43628d-5dcb-469c-b134-\
fc61ee2c1d92"],

Cell["Region 1 is bounded between x=-1.00569 and x=4.5.", "Subsubitem",
 CellChangeTimes->{{3.7760857538659286`*^9, 
  3.7760858071293592`*^9}},ExpressionUUID->"5e8ed805-b9cd-47b8-ba22-\
e2214be56c12"],

Cell["Region 3 is bounded between x=4.5 and x=6.89791.", "Subsubitem",
 CellChangeTimes->{{3.7760857538659286`*^9, 
  3.7760858320286045`*^9}},ExpressionUUID->"fcfa496f-65fe-4208-ae4a-\
d7704d6d7e5e"],

Cell["Region 2 is bounded between x=6.89791 and x=\[Infinity].", "Subsubitem",
 CellChangeTimes->{{3.7760857538659286`*^9, 
  3.7760858490613966`*^9}},ExpressionUUID->"32ebaa21-ac12-4058-b56b-\
00cc3b34fd13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.c.", "Subitem",
 CellChangeTimes->{{3.776085860490004*^9, 
  3.7760858696320925`*^9}},ExpressionUUID->"727f4567-0c68-4fe9-81bc-\
35567b8f1252"],

Cell[TextData[{
 "Since there are four separate decision regions, and each decision region \
has two elements of error, there are eight total elements to the overall \
error for the decision model. Region 2 has error  for misclassifying ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "f941d283-835c-4e30-8e0a-e3bf12613fe2"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]],ExpressionUUID->
  "a0769d65-9646-4732-b04c-117b7e8a8050"],
 ", Region 1 has error for misclassifying ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "affb08e2-b071-4208-8dc8-b74e6f269c72"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]],ExpressionUUID->
  "533c9f5c-3180-4e78-993c-3ab49f263b51"],
 ", Region 3 has error for misclassifying ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "2e86d6ef-5609-48cb-ace5-690f2868c969"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "4fc98135-5911-48c1-9690-8ca0e030d9bf"],
 ", and again Region 2 has error  for misclassifying ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "e0de605f-f59b-4c3a-bd7a-9e683aa3a605"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]],ExpressionUUID->
  "a2c273ea-fbf9-446a-8eb8-02deac15c187"],
 ". The overall error for the decision model is the summation of the eight \
different elements of error."
}], "Subsubitem",
 CellChangeTimes->{{3.776085860490004*^9, 3.776085868829954*^9}, {
  3.776085907876241*^9, 
  3.7760861019095592`*^9}},ExpressionUUID->"40b8ca58-367c-4a86-93e5-\
d5c56c68a24f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], 
    RowBox[{"-", "1.00569"}]], 
   RowBox[{
    RowBox[{"fx1", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], 
    RowBox[{"-", "1.00569"}]], 
   RowBox[{
    RowBox[{"fx3", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1.00569"}], "4.5"], 
   RowBox[{
    RowBox[{"fx2", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1.00569"}], "4.5"], 
   RowBox[{
    RowBox[{"fx3", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "4.5", "6.89791"], 
   RowBox[{
    RowBox[{"fx1", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "4.5", "6.89791"], 
   RowBox[{
    RowBox[{"fx2", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "6.89791", "\[Infinity]"], 
   RowBox[{
    RowBox[{"fx1", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "6.89791", "\[Infinity]"], 
   RowBox[{
    RowBox[{"fx3", "[", "x", "]"}], "*", 
    FractionBox["1", "3"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.77607998264295*^9, 3.7760800772230916`*^9}, {
  3.776086119036942*^9, 3.7760862164600887`*^9}, {3.7760862827789965`*^9, 
  3.7760863018185825`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fa2598f5-ca85-4911-a3e6-3d3850377e43"],

Cell[BoxData["0.5293163542124651`"], "Output",
 CellChangeTimes->{3.776080079257152*^9, 3.7760816528803635`*^9, 
  3.7760863173186665`*^9, 3.776161610487536*^9, 3.7761826654327765`*^9, 
  3.7765011610795317`*^9, 3.7765036478094845`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"8287f8eb-a4de-4678-9a33-2a0617c14270"]
}, Open  ]],

Cell["\<\
The overall error for the decision model is 52.93% chance of misclassifying.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7760863226147847`*^9, 
  3.7760863499602575`*^9}},ExpressionUUID->"e3062a11-c2e7-4a20-a559-\
70523ed4ec4b"],

Cell[CellGroupData[{

Cell["3.a.", "Subitem",
 CellChangeTimes->{{3.7760863574598007`*^9, 
  3.776086364285553*^9}},ExpressionUUID->"08c2d4d4-b951-4c81-9c7f-\
484f547eef4d"],

Cell["\<\
Define the posterior probabilities incorporating the prior probabilities and \
the normalization factor. Then plot.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7760863574598007`*^9, 
  3.7760864095550275`*^9}},ExpressionUUID->"aeeb52dd-d66c-452c-81fc-\
a7d569f2a4c3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pfx1", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"fx1", "[", "x", "]"}], "*", ".6"}], 
   RowBox[{
    RowBox[{
     RowBox[{"fx1", "[", "x", "]"}], "*", ".6"}], "+", 
    RowBox[{
     RowBox[{"fx2", "[", "x", "]"}], "*", ".2"}], "+", 
    RowBox[{
     RowBox[{"fx3", "[", "x", "]"}], "*", ".2"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pfx2", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"fx2", "[", "x", "]"}], "*", ".2"}], 
   RowBox[{
    RowBox[{
     RowBox[{"fx1", "[", "x", "]"}], "*", ".6"}], "+", 
    RowBox[{
     RowBox[{"fx2", "[", "x", "]"}], "*", ".2"}], "+", 
    RowBox[{
     RowBox[{"fx3", "[", "x", "]"}], "*", ".2"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pfx3", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"fx3", "[", "x", "]"}], "*", ".2"}], 
   RowBox[{
    RowBox[{
     RowBox[{"fx1", "[", "x", "]"}], "*", ".6"}], "+", 
    RowBox[{
     RowBox[{"fx2", "[", "x", "]"}], "*", ".2"}], "+", 
    RowBox[{
     RowBox[{"fx3", "[", "x", "]"}], "*", ".2"}]}]]}]}], "Input",
 CellChangeTimes->{{3.7760803405389323`*^9, 3.7760804651471443`*^9}, {
  3.7760805142731504`*^9, 3.7760805172136526`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"58286ba8-0db3-42e6-b114-c1d7f08d44d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pfx1", "[", "x", "]"}], ",", 
     RowBox[{"pfx2", "[", "x", "]"}], ",", 
     RowBox[{"pfx3", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "15"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(3\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776075473533419*^9, 3.776075519039065*^9}, {
   3.776080215545208*^9, 3.7760802292304244`*^9}, {3.7760803053238883`*^9, 
   3.776080312084547*^9}, 3.776080423685855*^9, {3.7760804553293734`*^9, 
   3.776080458501303*^9}, {3.7760806540309477`*^9, 3.7760806771555142`*^9}, {
   3.776086421272586*^9, 3.776086422589772*^9}, {3.7760865171006694`*^9, 
   3.776086559224758*^9}, {3.776086660692231*^9, 3.776086695583692*^9}, {
   3.7760867462180014`*^9, 3.7760867921303844`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e166366f-90cf-4df0-b561-1743bd669f62"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
7M/QYEh2u2BTFT1vnSM7yumu3q3DF7NIz0NlJQ9Gbxq4zKVxMZynwee8zbNZ
dKv3N26ve0qDh4PRY1S6OdvmOUJnaSCSsHFcyYe+vsicedVnHIyGL2lX0H0z
NZSxumwcPi00ls3S7XyldPPCxDg4H02XIJ6l78dzPevKChMw9IE/w4VujpMs
a7OnJ8Disp1oGt0DZqorjwsn4C4OKHlP93Nt10Xv0Qn684jev0z3Sb66Garr
JCR8f5lp6kvfb1unJgtyJmG1Ysspf7o55gXH3QYnoV/nokEy3QMDxmOS4lMw
nyquVkn384+BIwOOUzCpyoQ66L7+Km8w88EURAwSPCbodir53OfwYwoMq6MK
t/jRYN/dzV5BoWl4oCjEwkc321VyT7fdNGTupF2Vo7vvvMO31LvTwBo/IqdO
d4Xz9U6rrmkgkxhn9tMdZ/6inZt3Bia/qvea0u2oO9rWbjUDiR3nZizoViHy
tMTfmYHe1myS9f/iC+x/f/jzDPzqeZL2P/cx+zWyc82C2LkYJcv/xV948Pa9
+SwYBrEum/0v/lBL3dX4WbDVEp41/F/89tVXB9pmIeF8trA23fedkn9GMs/B
iSOBYSS6Y2yIPwak58DJI5BPhG5fs7ff9Q3n4OSHSzQ2uo8fsOvJdJuDwxt2
S/P052GoPdu1Hj0HWutj+r10KynHfnPInQMH7aWmOroF5EW/1r6dA+Yiy8Rs
upnEn3cKDs1B3pPW+xF0z/Ae/hzM8BvqdYk0B7p7OIfbu8V/A3udWqga3fVM
lz6pw2/Qk6q05aT78drOj6lOv0Gz3z10kP6+o2l6LVaZvyGjy7U4km6fga/N
Fa9/g3WxXKUZ3bZd3u+5f/6GKIZdO/joJjXeb2wXmoej18ivsun7j//V3gYl
7Xk40djA5Uo3Y8X7t/HH5+FFsckbCbq7Hy7VHb43DwuLXyTT6Pu7Pu3Wm9IX
85AhTewzo/tRPOE1e/c8iCXyLDPQHX35v5fveRfA86yCsQs9f0i2jysPJC/A
lF9WMqMXDYon5laMqhagV7PkxAN6/kmHq+qadi+AkqOcyD66hQteNVoIL0Kf
0rlYW3q+cix8+OaYtwhZ7soQSs//2NjtQi7vFmFydmR+g14fGIX+c3KnLsK3
hKxHoXT/QT1jZxSX4DStVuscvZ7QEsZWgiqXQCyldUbdhQbuUkTdy9+WIJKf
izWHXp8Gq85Ghq8sQXY+UZWN7u6fi2xXdZYhW3Tn14//q29EJqE7DcvA2kc8
oX6CBnlN4rqPvqwA+U4hV/gxGojZu0WWL63AwuZF41obGqRPFzZW8K/CeEbo
kwVrGtzZrXTkpcMqXBVM53GyokGkq65T08gq3OvOO8VNr89O/+wiBxf+QKsD
080Fer3vvf2gcYR3DbzivkYy0X1MZpCNqrEGEeHuFC5jGhwxO317+vIa2OnF
iBAO0kA3PTB3jekv2J26Fi5H7ydC6ncad+9eB4+TyvxPNWkgpfHjbNe+dZiT
DxYopvcrBU1p/ntW69A5V/opk97PNLWrvYST1yHhJINTNL3f2er37pDatQFb
PFVl9u6lQYqR1PE9XP/g5+pvNXE5GlxT/L4szcKA0nQqGS156O/nUVgrMx8D
SrJausK4iwYJJKnsMRkGdH0re89TLhqkkb1Nig8yILOLU39Z6P26cM9GhuJV
BhSbq2lyn43eX/dJ7lfZugUN0cRKjm1QYYuu101gZES8ob25WqNUkPh7LL6D
mxE5M3vQHo9QAdUaJrpIMqKe2AKSBH3eiNSUSL6CGBEt82Hlv34qMKh1p78P
Z0QXx2+15vXQrXSw9OhfRlQ+GfgwgT7PMEhIfji5yITy3kWenyinxx/Y0TrH
tBWp6gfeFX9Cj5+13hbFsxUxvjZttXxEjy/S05GnshW98jJ2qSymrxdM7KH6
b0Wth9gsHXPo3rVB9Zveitayc7Os71Bhk+k7S+QYM5qMTXT/cp4KntyZim4r
zOj6a8+RLH8qdIi5WBixsaCqb7aynr5UyNUav89JZEFynL1/FryoYOj3h3T/
LAvKR+8H55zp81GvoFXFIguaUVhYiDCnAtcz+4e/GNnQyZ/M25fkqCDp9FPD
RJwDLeqrSB78OgYWUoTEbXs4UBxzbl7F5zEIH/Ma+6jPgSjJGnpi7WPQ67uS
YunEgeSfNVfNfhiDlIhd8w6ZHOi49t9XlyljwJZz6JGv8DZU0C/Mq1lKn5dH
nkuk8HOif5/0b+wPHwPsFc8+sHMHatxz9GuSxBi9Pnk1hxO5kSoec8zQHgUF
2X1VPAd40JXkdsmIfb/gqKT1fIIGL2qdvituITQC10b1b5gf40d3g0Xdt1KG
ICw68vyihSCKMC4/3X90EFbnx5my9wujG+JbEq0v98FVkuhc4glRxGDA2H23
6jt81i8inbISRy52nv+axr4Bf/yGC6qVQAVNzO/17n8GGWrnN1wjibKOvysP
NWiFJaKumGGFFNoc1TFJ29UIaW48z8OrpRCDf9a691IDaD6YMHlZK4WMxZkq
bXoaIGT7/UClBilUyrqryCOrARjmltoEvkohb1od12XFBuCsKr88vSSFvsUZ
SKaZ1IMUEL6naRHQds4AraNpGBqD1nw/6xFQNjfH8s/LGDyeft7KaUBA+j2m
fNEuGIolI/dGmRLQzWylnl1kDOStfde8HQiozOQ/m5wbFND8kKaOwgiI2XbR
JnPxDZhbcaSMYwLy64hwSpmuhRyt6OUfjQSU5P99avJtLX2eWrP71ExAqLv4
lV9aLaRPjYtWdhBQX2y5wzrUwujVD0WhgwQ0k79qppj6EkJr4l7tZJBG4PjZ
btK4BkpFWUfUQBoNzQVPK7dXwQZTxEH5A9LoMYUrSLakCiwmlouEjKXRy6kr
WoeuVMFy9ZjPprk0OrX/rhuPZhXst2habnaSRv3TZ9mb855DT/RVjhPh0khm
5NyXwiuVwEJjUol+I43GWv+tbPF4BpMuyqIf3kojD22dwp/7n0HHDyc2riZp
5NVFFZ0Uewbp7S/7Mz9Jo1gtlt1535+C0gu/my8HpJFObFte6H9P4Vjsj19z
W2QQW7/f+ajUJ1AoXXn3pJEMOrFA1o97Vwo3swajC01lkPEDPs/mm6XgL7DD
d9pcBnk/Tn7naVkK2pxehpdtZZBUWdtc82AJfQ4T+53mKYMufpyp+LelBJbr
b5h+uiGDAuyY29ZsisDYxXVDt51+/oRf3vj+fPhKHF7w+yKDOuqf//TanQ/O
iy4Tud0yyKaAIV2XmgfB11y62QZlkIbVZ72e+Dwofuz87OucDNK8LuHa358L
bGtOHj67ZJGT0vEPXYk5kNLQ7/CQTxZdnmr8a306ByTinSw7hWTRB8XMLRKQ
A5oSTqBJkEX78qV2Zcxmg6eRo+BWVVnExuzKLGydDR/uOHzMsJFFh0ZVYcAm
C46d+NHw6bgs2nsjvVN0RxYMyzjUbnGSRaJVMzoTTZmwVmNfdPqULJobNktR
0M4E4sDxqH1Bsogj2e8cWe4B3FC0U2u9J4ueqLg55Qqlw+FG68y1H7LItIXB
k9U1DeJ0Ap1HB2RRXWnlY0OlNGiqSCV0jMiiYbvyStpaKhjkdJUUTMqi6sJz
2a6pqaAZbldt8VcW+R+x8t7engLSmifaC4XkUOdudflX1sngWh5657aYHJon
TzeKyiXDQ9lMm1ApOXTmjl1D3587IMTb/+M/ohyqfE+8fyH7DnDNn6Sta8mh
258+F4/9vg3rZW5brI7LoWLmiTzvgiTQJsQ06jnKod6ok/rOYUkQlJ5/Td5F
DjG8FdEssUmC+bjR7f885dC9R4386qxJQPM4LVQSLIf8fyzetPuZAN/Evfdt
3pVDJmeD3xDSbsGT5PMeZV1yyMZ1MGRvSByEZx16NtErh0YEDcO3asaBeYnY
hsKAHNr516U+aPkaTNe1pBRT5ZCGzz1RjcBrQJqQaixYpZ8/eGlq+VIslKAv
UtlC8oib7V6g78MYCD5c4jsgJo8kYuJfFpyKgUPHImrFCPLI3OOWhpdSDNC8
FS0zFeXRXoUc2yTKFZC9eyUqXVceOTIIvAZaNORP7xtMcZJHhoHVDGTLKAhY
ZSd9dZVH7rKDO/Iko8CQaTCI57Q8UugTmEj+HQkjArd23vGTR90iLKNDdyJB
yvCXfmKkPNozVFosXR0BD9NTMq/nyqO4mbtarVvCIN14yT58TB4Vau2JcdAI
BmEGnwuBE/Io8HVAaM9SEDyoGb7pMyOPRj8Jw8rzIHio0PHaflke/Wzlf7pb
LQjyt5WJabAooNfDZ+6X6F6Ex+3Ow7MyCsisgOMDr2cAKMV1r40pKKB3nnvT
ufYGwFNkztNPVkCslqV+91YvQMUzHcM2NQWk98rE0PTmBahO5issPqiAxrIF
une/OA/Yts3LxUMBvex+26Ivdw72cx2ItvNSQGfMDldfXvGH+uaX6UfPKqCd
q8y79jX7Q6NWUateoAJSqU6s4/T2hw/C0WShqwqItP3UqwwfP+gc0PjdmU93
7t/n2o0+MHo6L9jwlwJydEns4+byhB3+Pg/kaApILWEp7U7baVAPVsMcUwpo
n6lMd/310xAb95718wLdzBciFFlOg2zJZJojExGx6HQp/mY5BZ4T+6ouShGR
/Zih1LKsOyTNr/cclyWi0Rh+4appN6hZe7euSySimvW/Vtuq3IB9m50hkwoR
aRmF9QcddINSxdAvifuJaFmEy4N41hWmfBp/FzsT0ZkNie3vu5xhd2A87y13
IlJcsLc9VugMumHHtPw8iSjFjBJ/+qIzxMfTItX86dfz1LGFQ8AZlJ5wctVH
EJGYYkqre70T+M9aK/3IIiION3mPvzwn4N6KqGVdLhGV7aUOa9Y7AN4cC8wp
JCI++3Sq9TkH4Oa69Ob0EyIaE2IfEO+0h4q9mWaLb4jIWVdx813mcVg4N3pm
ex8RWcY1r191sIUn2935Dw4RUfrGQ6ZhLlvwLBluCB0lovdfdK+Ivj8GPwcH
RKamiShENNBaQf0YNB3t/dTyj4i2cXU6WIrZwD1yu0qchCI6YzWQNr3bCiw/
HBmgSCuitM4jSuRuS9ju0XZzRV4RZdh0+cqnW0L0gw+/TikrooUXTlUmUpbg
va0x7aCBInLxnvr3T/s/0B+vWWN0V0QcouL7twoehdUYjSJtT0XkYN7aIlFp
DpUS1VbnfRRRgw1jSJC5OcjbVT4aClBEasufTN/FHQHu94+d8FVFFNP+X030
NjP4lZ9bH1akiFKbqi/mGJlAFpL0qypTRDcq/V5/mj8Ex38+FJ4uV0S7FVxE
GbMPwSeezIATNYrI84iGhd+GMbyIviur84F+P7f/sO1qNIIbzrdurE4oIob6
vQIs4YawXFLGRJtRRNYFQsxf9AzBdaEltHteEdnM1E84/jsA2rHsftVrimjN
5UZAQdQBGC+LtQrgICHh98tnG5IM4NBKpMicAgn9+oJLb7QjeI6yUwfIJPQ7
tMfZLB2BxA3KjnZlEjrvmpP12APBisg/hidaJPT0X0ZA4jpAocHlUW8TEpIQ
VLW2OasPzAmBT6ieJHTfeuXJxas64N+dItftQ0Ksuwb3OpB14KfE8+wmfxLi
TN6YMe3ShueV83cKgkko83KeCVLUBvfvfkFucSTUxTZ+WHlIE+qlz6CBIhJ6
QLTIeRWiDkq+119+KiOhkrHBkwwq6pD+olilrpyE5lXTTkpPqMF5U6p05gsS
slUgCjM4qoGkvzu7w3sS2iFwvuGtmSpEvnLq7BojISFD6bUTliog0NRxUWeS
hKZMpLlu7lSB8g4D4exZEoJv+WXZH5Whf1TW3WuVhMS8up9eNFMGXa7Zpb/s
ZLRoe/12mPVeWHGPEJQkk9Hm6mNBcX4yJPj9fnNVmYxWX6j9+1hGAtkQN9cJ
NTI6BgevLe0ngXWicVmlPhlVXH4uknFeESpe7tQzsiAj0dqPpa9+KYDvjmxn
7wtkdGo9dcWBTQ5YBHcxdwSRkdoc4x2fClnIJMSUqIaS0bmjG/eeOMpCm6bn
/EYMGd2LzlqofiEDRLe9MUlpZBTXZN3gfUkaRl/goqqX9PgOMkel90pBaL2K
mVAdGZ2ZHb1ydVISdn/MnwuvJyMWZ7P8viJJMBiO0zrUSkaX8kITPQiSkM35
X2vvTzISL8gsDJGRAE3+Bj8YIqPYsA/sFzrEoV1SbXf+KBl1coqYP7IVh3/q
go5nZ8io1MisTstbDNL239zSOU9GN13w/ugVUSCbbRSor5ARul/11/eqKDQe
8zPN+EtGvWYXjNZ2i8L/f19FRo+YLiaIFYrA/wFnsM1G
          "]]}, Annotation[#, "Charting`Private`Tag$19652#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl2nc81d//AHDZKyN7701DVsjrVFQ0iJJUQhJpqBCSkI8kRSWVUVaIJCNF
l3vMkJ3IyM523zbJ+L5/j98/9z6ej/N+nde557zOuec+HlfG8ZrlBXo6Orpg
8uX/3s849NM2NuTwMUazpC/rBPSKnpndsiqHf3xwOJBP2rG1bUFhWQ7Hctv0
ZJN2OVC3emhaDieI7+xPJX1T4zP7yz45zMxWpR1FOuxvuOL2Ujk85tsy40Z6
cx6L6r5iORyW5fbGmXTk5SAN60I5/IZxxsCBdHTvLS2/HDn8+fU0siadVOm4
tzpRDtOnL3oA6cInenb2QXK47GXZcS7ShofyHG76y+HFC8/aWUiXMG69EOIr
h+UL60w2ka64JXf5/Q053DwQODi3RkDTWS7fZUc5PLrAJfGL9KjK0PPIfXJY
5sdW8zjSboN2r5JBDhd8lb8URZoW1xFXYCCHRc6euBxOep67Mbl7J9nuvEfB
j/TGQmGOsjw53tAtDrakBcsi6jGjHH5GtaXwkmYZPX7wLp0c7orROslCenmz
aPnuVVmckSHQuLpKQMeplC9Fc7J4Y2bH8RHScTNfkvMHZPGek25pRaRlZQZ8
0rEsjqs4wm5Lmu9A2rwzRRYz35w0OkKa8crlawpfZPGwIbspIv3ny6JTUrYs
XpjP7lIgnW7BYRH3Whbr+dVM0P4RsDVASzHSTxYXnj9o4E1aKvVvwlFvWax/
2iXEhTRPXYnYZg9Z/Nya6bUN6RkhU94wN1ncIGK4XY90fvbZ1Xu2sjjo9EDD
/AoB+r0hLbf0ZHHJCxOH86TVmA4f0dGSxdK8CooWpMXVeKvnt8niJamK94ak
17xii68ryWJR8aOr/KQx18d0N0FZrM7jG1H2l4ADRh3+5+ZlsMAx/zYe0iEF
a+rO0zI49bT+xMoyAVVbZbsuT8pgLou4kiHSxlJuur5DMji51ef1Z9J76daI
qFYZ7Bl3eKstacMyaYfafBms+q/wz5MlAm7rm3A3f5TBsdT0h7dIF+W6Fre/
l8G/R+iHzpDelZwr8idFBh8eeJuuSFon2LhlI0oGn9Iacy1YJGD7fpd92p4y
uDH2JkvVAgHXSsJnDK7L4DrzEbdU0h90ct7svSKDTUP8PUJIayit/DO/IIPD
MnWumpBWZQ3Pv3SCdKnsaMk8AfK12QoJ2jJYvjqM580cAef3tv5I3SGD987/
3O1DOqloOTBLQwbbKaSsW5KWydzTU6RAjifqgA4TacnwH9E/BWTw7Nfgs06z
BIgcXWLhWJTGO51DAzlnCMj1qslQmJXGQwSLUd80AWZvYo8gmjRu1P96N4+0
7zQ88xyWxtvuND+yId35NFSyr00aD2a8z4kjyHpsF9H+9FkaN5XxLXLQCNCi
m2xvzJPG0s26l9unCKhTLvEdz5bGWzweWyaRXvNxxFLp0ji6UfmSDmk78cxD
YS+lcf7l/LiTkwRIOxg6nvORxqxngkr9xgn48oCLyddTGjvvFAgzIm2R25cW
dV0avxXLy9gYIyCQ4b+pGldpXNH1eOou6YG39d5atmT7rMch71ECUsbtItgM
pPGixI2x/cNk/Ci9z8W/Uljq7bOZo/0EnNlimDU3LYUZtv+bmO4jzytDz/67
o1L4QVNp5xPSgZEjpi/bpTDREhXW1EvOl16daM0nKVy3V3AY9ZD77cFziuoN
KRxqJsU10UmOP69husBVCqeLWK76klb/zaKwz0EKny14/5GNtPEO30enLcjn
4y6ek+sgwKPDzi58qxQW5j3td6CdgDYVZTrauCQ+cSfzl/kP8vNYOWj5Dkji
O01Fb2tbyPPmTowLc6ckHqHRMxqTZm7hbJaskcRxBJOzZjMBur4zieZpkviH
9gfbtQYCXtYW7cs5L4l7ondVHKwl4LTbkfse3RJ4n/TpkVdU8nzQN5F90iqB
3zY8HJkoIeuTdXdxVh3Zvt9Jz5A0Xar63DBFAp+o1Spup5Dz2cdx7lS8BB4f
Xxz7W0iO50StjpGdBB5J/Hl1JI+AF/JlzbbWEpg6r/9BnDSaK7x866gErrrZ
umGeS8CzyHdJH40kMI8Cf83HjwTofQ/lkpOSwHNCpv62WQQEoQPDLH3ieOUN
40ezVPK84IZA+V/iOOTe0pZzbwlo/a0jvqdJHLcaxO69nkKA0m1FS18sjo1q
ny08TiLr7RNTyWSCOF4TWFPKfk2AgFrF82YHcaxk+OyZfzR53gnsMYkdFMPv
db/E6gST+6+4voGrSwzvvB/9rC+IXF8nW5ugFjFs0P9I934gAZS8m26upWLY
8ZPnxVp/8vvhWOoT3TdieJv8w9dKPgQsPeLo+WErhsXq5TbpXiHAT/vlxQOW
Ynho3w3LdDdy/n7LzxSZiuFKoZQOgUsEsKsbMSbpieEnSumX/jiT+7PWXdVd
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
yEn1Du8E6f//v6AG+tLGvHWV9P8AP8XbYg==
          "]]}, Annotation[#, "Charting`Private`Tag$19652#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jfQzBP///wodlR/pFI4KQfB//LY/xA==
          "]]}, Annotation[#, "Charting`Private`Tag$19652#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-10, 15}, {0., 0.9998438996991671}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(3\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7760755126017857`*^9, 3.7760755217889614`*^9}, 
   3.7760802309777856`*^9, 3.7760803138208447`*^9, 3.776080470310229*^9, 
   3.7760805228142242`*^9, {3.77608065946797*^9, 3.77608067864196*^9}, 
   3.7760816588577166`*^9, {3.776086417909169*^9, 3.776086424022475*^9}, {
   3.7760865439897366`*^9, 3.776086561427761*^9}, 3.7760866984080224`*^9, {
   3.7760867578272595`*^9, 3.7760867948820047`*^9}, 3.776161612190601*^9, 
   3.7761826676983185`*^9, 3.7765011629114943`*^9, 3.7765036487938275`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5b190085-7c84-4fd3-9225-16a8eda76083"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.b.", "Subitem",
 CellChangeTimes->{{3.7760868357084327`*^9, 
  3.776086854097094*^9}},ExpressionUUID->"12367e63-aeba-4556-b81b-\
282753b02822"],

Cell[TextData[{
 "With the prior probabilities no longer being equal, we no longer have four \
decision regions, it has been reduced to three regions. Visually, you can see \
that x=4.7 will fall into Decision Region 1, however, we will solve for the \
analytical endpoints of the region to make sure. Again looking visually, you \
can see that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]],ExpressionUUID->
  "13afcda1-677a-4760-acc6-c0854106183d"],
 " is dominated throughout the decision model."
}], "Subsubitem",
 CellChangeTimes->{{3.7760868357084327`*^9, 3.776086992771084*^9}, {
  3.7760870362615786`*^9, 
  3.7760870645830727`*^9}},ExpressionUUID->"adb80264-2c5a-437e-9448-\
dbe49228eff4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pfx2", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"pfx1", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7760870046443768`*^9, 3.7760870324977617`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"55ad8deb-c7ed-488e-92e9-2b6329fa76f2"],

Cell[BoxData[
 TemplateBox[{
  "NSolve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"NSolve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,13,4,27831556194203905687,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7760870707709556`*^9, 3.7761616127843294`*^9, 
  3.7761826683857985`*^9, 3.776501163411687*^9, 3.7765036491063156`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"3784dd66-861a-429d-8786-2097dc182404"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2.8362882382063677`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "7.636288238206368`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.776087070802207*^9, 3.7761616127999544`*^9, 
  3.7761826684014187`*^9, 3.7765011634273176`*^9, 3.7765036491063156`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"bd59f60a-6b62-4cf9-911b-7722e76f110d"]
}, Open  ]],

Cell[TextData[{
 "Region 1 is bounded between x=-2.83629 and x=7.63629. So, x=4.7 falls \
within this region and hence would be classified as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "3b4f0fc5-e852-4fd5-a8ac-e745be003052"],
 "."
}], "Subsubitem",
 CellChangeTimes->{{3.776087075507131*^9, 
  3.776087156002832*^9}},ExpressionUUID->"69aa89f6-1347-4f69-8717-\
974542c56db9"],

Cell[CellGroupData[{

Cell["Problem 2", "Item",
 CellChangeTimes->{{3.776087075507131*^9, 
  3.7760871633195286`*^9}},ExpressionUUID->"2f09093f-eeec-4ff0-af9c-\
daa0c123d68c"],

Cell["1. Plot both class 1 and class 2 pdfs on a single graph.", "Subitem",
 CellChangeTimes->{{3.776087075507131*^9, 3.7760871736008797`*^9}, {
  3.776087243927539*^9, 
  3.776087260633999*^9}},ExpressionUUID->"168db036-3a0b-476c-b622-\
1f7590af551c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0.95", ",", "3.95"}], "}"}], "]"}], ",", "x"}], "]"}]}], 
     "}"}], "//", "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".9", ",", "1.1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Class 1(Healthy)\>\"", ",", "\"\<Class 2(Sick)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7760822839622107`*^9, 3.776082316442802*^9}, {
  3.7760823659138956`*^9, 3.776082414777633*^9}, {3.776082562927929*^9, 
  3.7760825768111973`*^9}, {3.776082652803747*^9, 3.7760828273994102`*^9}, {
  3.7760829541759186`*^9, 3.7760832184234934`*^9}, {3.7760871876614795`*^9, 
  3.7760871904476223`*^9}, {3.7760888444138584`*^9, 3.776088876985376*^9}, {
  3.77608953978656*^9, 3.7760896032033167`*^9}, {3.7765036688900948`*^9, 
  3.7765036823931737`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"113c193f-84c4-4b56-9936-69d82a079d45"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJx11gswXFcYB/ATbBPirUnHs8RjNSakauh6JxVJvCpEtCxi6xE6SCMRUTWp
IU06JMSbdrVSYsWEtNKmDEVbr3iGlorYZbVKdNE0qpOEivHtd66Z3Jmdnd98
Z8537rnn7n8NeHE+4TKEkNa1z/Pv5LZnvd3dc05k/Vpwup/mVPl4Du0jZykz
qPKX1IWcwKnje9EnTTke7t7okJF2q9lTaF3HzHJODvpRmGyBw7fogAPmyvwR
dNb9K0o1y+hxy7LM09oSqZ84PcybtUMLXpoxbAxEx10usHRJQct1J3d+yEfX
dqlPRLagJalBKbViav6F8WsC2Xmp9fXV3PxN0BqspMTbrmi9Gznsjih0gwKP
a5OBZutHavpXo6uWdPzN+tBPU+V1a+fRJ8P86jq2LmyYEElkSrGGJtq3rfUn
69fQLukhFnW26JUvfh0TuqNLX4nqFQeiuyW+ZH8MWqQfkJD4EbqxxtYiKBNt
Uhpv+hkfnTDTHv7NTbRP7mmxUTN6Z7F9eWw/+trTcUGECN3ww2+SO4uUH8yf
FW9ZlPogN3jfCQ10ic11zxIj9HDMdn6FFbpUrsNc0RXttVQq63YM3ebio20d
ge56xI1PPou+/SxVpeQT9I86HxcWFaGry/l2E2P4Pgzaa9THCPF5DfI7nJNW
0RZ/RLFjVfH+7JVkjhZn4XxnhhbjKv/F8d7lwhhtRRyfmN56SysDx9fZTXza
LYt1krdvSTMP66I0LbW/5bGe31ImGr2E9WNsdkLvFqzrDRgYj17Furp3SWkX
C+uT74S2v1uA9cp/vuM92Ib1CqH6cv1FrJvodr3fR7C+Zz7bvj4b6+IDjnl3
5bC+mDAwzsnHevrraed7ZLB+z3ax5lwh1jOqL2z3pfrflHTJmlH982tLhPup
/lYrhw/tpvp3N6uoelD9l9MvzQqo/Yut9nviSfUfPSxomKHu37FsecGL2r8u
M85X8tT5SNkmESpR67NcqpAXU+fpDsvEa5J6/s4piZ6K1HqSM8MXQqn1TEY1
valMrSf4SHrLl9R6vg4JNVeh1uP1xo6qFmq/ikctBVeo/XA1CuIfKXrxfm0+
v/C9dWp17RI6MfOBEGY+rL3/jHwghJkPhDDzgRBmPhDCzAdCmPlACDMfCGHm
AyHMfCCEmQ+EMPOBEMgHv/XrF2k+gCEfwJAPYMgHMOQDGPIBDPkAhnwAQz6A
IR/AkA9gyAfp+jbyAQz5AIZ8AEM+gCEfwJAPYMgHMOQDGPIBDPkAhnwAQz6A
IR+k+7ORD1Jv5AMY8gEM+QCGfJDe30Y+gCEfwJAPYMgHMOQDGPIBzMyHtffB
cHZs0B3PW4ab8w0Sg+fHdo/CSshlNOQD+GVrL9bwEM5XcSuaI3wL5yuuzJ0O
DkOv5Ead7/BFp8w9jC07g/MfWjGeHejH+fqXq6annHB82XATS/k42nRMYN77
NjrnXHRnzQmcjzeZze3rxfkidO42TTvgeJP5wdzfg9CNq52sAU9qvvbPjeci
cD69ZkGCNQ/rqjw/25ForMcNte/o7cF+e80Dd8/Y4/g/k4K5A1z0RbWAD+55
oEd0FPTjw9EidyvHXaHoo6zHWSWR2I9r9WqN23tYT+jhnfKk+u+0MRRFUf07
mg2dD1L9Y7R2sX2p/t/z+mRnqOfVkv2fQSG13w5JU1ebqfvnsCyui6j1Rqxf
+P908/69aLyW//P6z9LxUN/8/2bz7zszDwj5H8If3Yc=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 193, 194, 53, 56, 25, 52, 24, 23, 22, 21, 20, 19, 
            18, 17, 16, 15, 14, 187, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 
            51}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{168, 191, 192, 148, 153, 147, 146, 145, 144, 143, 142,
             141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 
            128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 
            115, 114, 113, 152, 112, 158, 151, 170, 163, 
            177}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 187, 14, 15,
            16, 17, 18, 19, 20, 21, 22, 23, 24, 52, 25, 56, 53}], 
          
          LineBox[{77, 94, 69, 92, 83, 63, 90, 81, 73, 59, 88, 79, 71, 65, 26,
            85, 75, 67, 61, 57, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
           37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 86, 76, 68, 62,
            58, 55, 87, 78, 70, 64, 60, 89, 80, 72, 66, 91, 82, 74, 93, 84, 
           95, 50}]}, Annotation[#, "Charting`Private`Tag$20571#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{99, 179, 171, 164, 159, 154, 149, 100, 101, 102, 103, 104, 
           105, 106, 107, 108, 109, 110, 180, 172, 165, 160, 155, 150, 182, 
           174, 167, 162, 157, 111, 181, 173, 166, 161, 184, 176, 169, 185, 
           178, 156, 183, 175, 186}], 
          
          LineBox[{168, 177, 163, 170, 151, 158, 112, 152, 113, 114, 115, 116,
            117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
           130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 
           143, 144, 145, 146, 147, 153, 148}]}, 
         Annotation[#, "Charting`Private`Tag$20571#2"]& ], {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         LineBox[{97, 98, 96}], 
         LineBox[{189, 190, 
          188}]}}, {{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.9, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.9, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{0.9, 1.1}, {0., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Class 1(Healthy)\"", "\"Class 2(Sick)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.776082720343134*^9, 3.77608275054967*^9}, 
   3.776082829494356*^9, 3.7760829590076036`*^9, {3.7760830246367683`*^9, 
   3.776083042266222*^9}, {3.776083142756566*^9, 3.7760831820639606`*^9}, 
   3.7760832201546836`*^9, 3.7760871916507006`*^9, 3.776088878204793*^9, {
   3.7760895885641575`*^9, 3.776089604100328*^9}, 3.776161613065571*^9, 
   3.776182668698288*^9, 3.7765011636278477`*^9, 3.776503649246935*^9, 
   3.7765036931584*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"08c3d1ba-309b-451d-981a-3c1fde1c574b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
2. Equal prior probabilities and a decision boundary of x=0.97.\
\>", "Subitem",
 CellChangeTimes->{{3.7760873079740963`*^9, 
  3.7760873358030047`*^9}},ExpressionUUID->"71c04f57-f3d2-42ee-807b-\
66d52221f889"],

Cell["\<\
2.a. A false negative will occur when the patient is sick, but is classified \
as healthy. With a decision boundary of x=.97, the probability of a false \
negative is given by the integral of class 2 from x=0.95 to x=0.97.\
\>", "Subitem",
 CellChangeTimes->{{3.7760873079740963`*^9, 3.776087373050787*^9}, {
  3.7760875009901543`*^9, 3.776087514484539*^9}, {3.776087587082135*^9, 
  3.776087654914812*^9}, {3.776088672742428*^9, 3.7760886765705376`*^9}, {
  3.776088768429125*^9, 3.7760887685698967`*^9}, {3.7760909422270603`*^9, 
  3.7760909424145155`*^9}, {3.7765019474447527`*^9, 3.7765019505545807`*^9}, {
  3.7765039456802893`*^9, 
  3.776503960320399*^9}},ExpressionUUID->"ff67419d-96c8-4cac-bc4b-\
2260ef55de48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u2", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"3.95", "-", ".95"}]], "*", ".5"}], 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"3.95", "-", ".95"}]], "*", ".5"}], "+", 
    RowBox[{
     FractionBox["1", "1"], "*", ".5"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", ".95", ".97"], 
  RowBox[{
   RowBox[{"u2", "[", "x", "]"}], "*", ".5", 
   RowBox[{"\[DifferentialD]", "x"}]}]}]}], "Input",
 CellChangeTimes->{{3.7761048600018206`*^9, 3.776104881626102*^9}, {
  3.7765037623904305`*^9, 3.776503817721171*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"80beaec3-c908-4e09-8213-fe4986a2f16d"],

Cell[BoxData["0.0025000000000000022`"], "Output",
 CellChangeTimes->{
  3.7760908911278515`*^9, 3.7761048839853497`*^9, 3.776161613190568*^9, 
   3.7761826688545284`*^9, 3.7765011637437315`*^9, 3.776503649325059*^9, {
   3.776503771093251*^9, 3.77650382395895*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"a03d0aa4-cf1f-4fea-995b-9d8ecf2d5669"]
}, Open  ]],

Cell["\<\
Based upon a decision boundary of x=0.97, the model would classify a sick \
person as healthy 0.25% of the time.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7760886947871027`*^9, 3.7760887108072724`*^9}, {
  3.776088751422428*^9, 3.776088751422428*^9}, {3.7760909236182995`*^9, 
  3.776090928961892*^9}, {3.776501702438095*^9, 3.7765017042818108`*^9}, {
  3.7765039349588428`*^9, 
  3.7765039386930885`*^9}},ExpressionUUID->"7fede101-a60f-4995-b617-\
bf4c65a0256e"],

Cell["\<\
2.b. A false positive will occur when the patient is healthy, but is \
classified as sick. With a decision boundary of x=.97, the probability of a \
false positive is given by the integral of class 1 from x=0.97 to x=1.\
\>", "Subitem",
 CellChangeTimes->{{3.7760886947871027`*^9, 3.7760887108072724`*^9}, {
  3.7760887537852025`*^9, 3.7760887721517887`*^9}, {3.776090946523785*^9, 
  3.776090946836274*^9}, {3.7765019577730713`*^9, 3.776501962850992*^9}, {
  3.776503981619746*^9, 
  3.7765039890445766`*^9}},ExpressionUUID->"24546c9f-c53b-4d0d-b631-\
2fedfb4e1405"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u1", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    FractionBox["1", "1"], "*", ".5"}], 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"3.95", "-", ".95"}]], "*", ".5"}], "+", 
    RowBox[{
     FractionBox["1", "1"], "*", ".5"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", ".97", "1"], 
  RowBox[{
   RowBox[{"u1", "[", "x", "]"}], "*", ".5", 
   RowBox[{"\[DifferentialD]", "x"}]}]}]}], "Input",
 CellChangeTimes->{{3.776104894984968*^9, 3.776104906625229*^9}, {
  3.7765038073934326`*^9, 3.776503814455652*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1447b98c-e1b1-4a4a-8f98-425547695642"],

Cell[BoxData["0.01125000000000001`"], "Output",
 CellChangeTimes->{3.7760909070251255`*^9, 3.776104908859477*^9, 
  3.7761616132843113`*^9, 3.7761826689639263`*^9, 3.7765011638283663`*^9, 
  3.7765036493875575`*^9, 3.7765038314743156`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8de6804b-2945-4d6d-a330-e5b44f55ad1e"]
}, Open  ]],

Cell["\<\
Based upon a decision boundary of x=0.97, the model would classify a healthy \
person as sick 0.25% of the time.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7760877585977087`*^9, 3.7760878329116907`*^9}, {
  3.77608872416858*^9, 3.7760887342280903`*^9}, {3.7760909105094233`*^9, 
  3.7760909182904015`*^9}, {3.7765019744623785`*^9, 
  3.7765019806809473`*^9}},ExpressionUUID->"78e85d01-da35-4ca8-be90-\
b6c9c79f0938"],

Cell[CellGroupData[{

Cell["3.", "Subitem",
 CellChangeTimes->{{3.7760880380510607`*^9, 3.7760880810700893`*^9}, {
  3.776104931639934*^9, 
  3.776104931639934*^9}},ExpressionUUID->"80212342-f36f-4b42-8c3d-\
afaf3027fa6d"],

Cell[TextData[{
 "Define overall error as a function of ",
 StyleBox["a ",
  FontSlant->"Italic"],
 "which is a variable decision boundary point. Moving a in between the two \
boundary end points will adjust the decision model overall error."
}], "Subsubitem",
 CellChangeTimes->{{3.7760880380510607`*^9, 3.7760880810700893`*^9}, {
  3.7761049338619595`*^9, 3.776105009264455*^9}, {3.7761050581791325`*^9, 
  3.776105113547046*^9}, {3.7761051446429977`*^9, 
  3.7761051764505024`*^9}},ExpressionUUID->"9e589707-d391-41d6-91a6-\
ac3559dc01d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error", "[", "a_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "1"], 
    RowBox[{
     RowBox[{"u1", "[", "x", "]"}], "*", ".5", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", ".95", "a"], 
    RowBox[{
     RowBox[{"u2", "[", "x", "]"}], "*", ".5", 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"error", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.7761049238589873`*^9, 3.7761049276400757`*^9}, {
  3.776105012045576*^9, 3.77610505200749*^9}, {3.776105204277608*^9, 
  3.7761052070744286`*^9}, {3.7765020468881197`*^9, 3.7765020588944817`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"dd207f94-0427-42f1-b215-3611ca232ccc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.375`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "a"}], ")"}]}], "+", 
  RowBox[{"0.125`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.95`"}], "+", "a"}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.776105209433676*^9, 3.7761616134249372`*^9, 3.776182669135773*^9, 
   3.776501163912997*^9, {3.776502038513409*^9, 3.7765020594725533`*^9}, 
   3.776503649450055*^9, 3.7765038727322307`*^9, 3.7765040074408216`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"648c7745-16bb-4e08-810f-df060f090215"]
}, Open  ]],

Cell["\<\
error[a] is a line with a negative slope. Usual optimization would require \
taking the derivative of the function and and setting it equal to zero to \
identify the mins/maxs of the error function. Since it is a line, the \
derivative in this case will result in a negative constant which isn\
\[CloseCurlyQuote]t helpful. Checking the end points of the function within \
the domain of a=.95 to a=1 will provide either a max of the function or a min.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7761052156522093`*^9, 
  3.776105415728323*^9}},ExpressionUUID->"72c34b35-da14-4fe4-9903-\
8abfe6b0ba65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"error", "[", "a", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", ".95", ",", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776105186403237*^9, 3.7761051960279408`*^9}, {
  3.7761054185407653`*^9, 3.7761054481064262`*^9}, {3.776502077521989*^9, 
  3.7765020803500357`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6dd1e3b9-4142-44fe-b9f3-7c5c70f5e248"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkns0lHkcxichR7utIgYr41ZCUqrtZh9tJzmsSCulC20bktWUbu+gxmAw
GWbmRVPKmTZpS1qkpSvrskdqM81uJdkaKdndel+hCbnsb/74nfd8zvN8v8/z
/s7P4fu9obsMOBxOEDn6r6akPzo6mkE7Hnp6e9OQ9dzLExPuXTCld8FCGsGu
52tLCfc5+Zz1WkDjflm46RvCJiYXzT3n02iuulUeE8PAVy0ccnWnUVsvHoyN
ZfBzlFfDLCcaxZ02oj1xDI6k5oWZmtOIs1h9hp/AgNsYlNzVr4B/dd3AnMMM
XJtiW2aXK3ByUkB84DEGqs2WhlPjFQhOWWXsl0nykyIWLfFQIHDurvp3eQzM
vvTZOdQjx01R4elJSgaykKrUzaVy8D8bVDaoSH+D34vXR8khabrza8RFkvcN
v0JmKwfX7YRueyXpN7O8MuGZDP/VFW00u0H2xWRVdhfIsHDylfZ5DeQ+vtWp
Pn4nw/MD85IdW0n/upH00JkyqC2foknDQB25oi1LlYfF0QoXTQcD4e7SxEv2
edC+Puwu7SZ6wrqZI3Qu+ujWUPu3hKVOqiemuUhk3U7bDZL/e2RnOiCRYmVS
jdHdUZJvHbZvJUcKqnq9XGvIwjejsqbxaA5G7bg+5z9nYfYu4NOR/uPovhZo
usqShSphuuut2OP4+lPOsP8sFn3cMW+fXgle8EdMxmez0N5x8Xm7VYIB+uBy
+/nEL010edqRjfjX26RWX5F9hxjdhi3ZcI/Zz7kNFryI0uZRdRa2F+YXPFhL
9kWnJXYHZ+Hxh5cB0hAW/L1nZg01ZuJqWrGD02ayT/6q6tTyTBjWxdi47GAh
6wyZnXRDjFNu27z/2s3Cy2mkMHu+GCWroxLYfURXtPQ8Ks+A+XF1axdF5m2b
7Cs8M9Bi8OPaVBGLENVoWG1JOvrmWPXkSFiogyL2jDulY3vKu5I1NOmjG0zZ
r0yDr/BhRlwR0Vuq9zpbpkFc6ZgVfY70qz4b8EOhCDPMVZe+uMyiouieo2Yq
YUd31rmacJlNR4okFZt2vNzw5hbJqynNDR8XwqDNuEPYTPTOSI+6A0Lw/l0q
Ev9B+oUlh97tPYb0xScClj0m9/NPlR9fcxRbPScv3vSc8APvYcWDFCjDOn3X
9RB/z7SjD9uSYVPeFf+eYRGl2zm252YSzKoGb3A+Ej188grRdQHWXTGudSas
bWtUGlwTIOcS95o/YZ5/uk5UIYDJuZW/yPT+pUZVaRcE4OSnn+MNEbaeMjej
QID3By1yfIdZCJ+ZWmXtE0CzbNE24SeSFzljQDpXALMlfhElhFVPNCHTXEje
wk3hLYS1wfSVXJ4ArW7J681Gid/XIi7PSoAG26Y1Kj07WHbJjAS4OrbBs36M
vL9u6za6i0L/8C73V4SjtnR4WPxNwUt32NVknOz/85Qkv53CZabIMYQwr8nW
r6CNQsmLbkutns/b3S68TeHlsw/mhhNk3u65jdV1Crz2KdNdCasKio+cqKZw
Wu0+lU+YJ7ZfpCyj0HHfxyRf7x9/IedeoMC9G2xUq/cfUrHKnyhsbN5h0ElY
y0QFWRdTyP8tcWJCPx/jUHbyJIX/Ab9Taws=
       "]]},
     Annotation[#, "Charting`Private`Tag$22856#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.95, 0.006250000255102056},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.95, 1.}, {0.006250000255102056, 0.018749999744897966`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7761054351338897`*^9, 3.7761616136124306`*^9, 
  3.7761826693076425`*^9, 3.7765011640288863`*^9, 3.7765020819437037`*^9, 
  3.7765036495281763`*^9, 3.7765038769508324`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"81517796-d07b-4a5a-aa70-e20b45c8017d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"error", "[", ".95", "]"}], "\[IndentingNewLine]", 
 RowBox[{"error", "[", "1", "]"}]}], "Input",
 CellChangeTimes->{{3.776105452481275*^9, 3.77610547152748*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"0b034666-c72b-49ed-b5c5-2ee651f9706b"],

Cell[BoxData["0.018750000000000017`"], "Output",
 CellChangeTimes->{{3.7761054661682496`*^9, 3.776105472761767*^9}, 
   3.7761616136593018`*^9, 3.776182669354511*^9, 3.776501164113514*^9, 
   3.776503649575054*^9, 3.7765038818100376`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"b6e628ff-a9e6-4dbd-9eec-e46f8518bbaf"],

Cell[BoxData["0.0062500000000000056`"], "Output",
 CellChangeTimes->{{3.7761054661682496`*^9, 3.776105472761767*^9}, 
   3.7761616136593018`*^9, 3.776182669354511*^9, 3.776501164113514*^9, 
   3.776503649575054*^9, 3.7765038818256645`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"480c1b88-fa5f-4d07-8d9f-4017e5b28970"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The optimized value for the decision point is a=1 which is in line with \
Bayes Decision Theory as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "9ebec0c3-0293-4329-87ca-7a00073411c0"],
 " dominates ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "66eb58bc-359b-4c37-997f-ea38709d1926"],
 " from x=0 to x=1 and then switches to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "65cd6ae8-2a3f-4471-8c93-e21006840fb3"],
 " being the dominant decision rule."
}], "Subsubitem",
 CellChangeTimes->{{3.7761054813584347`*^9, 3.776105602502231*^9}, {
  3.7761616596479883`*^9, 
  3.776161659976145*^9}},ExpressionUUID->"3dfd4d32-632c-4f9e-a956-\
2504cb8f63a9"],

Cell[TextData[{
 "Changing the prior probabilities can be accomplished in the same way, \
except we will expand the function to include k and will replace the prior \
probability in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "cbd4b49c-a23f-4464-948d-7a7abb524772"],
 " and (1-k) will replace it in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "acdd0f9e-44b6-4fe6-bd4e-18d17316c215"],
 "."
}], "Subsubitem",
 CellChangeTimes->{{3.7761054813584347`*^9, 3.776105679947163*^9}, {
  3.77616167761989*^9, 3.7761616835571823`*^9}, {3.776508730907962*^9, 
  3.776508761050727*^9}},ExpressionUUID->"dcd32251-4f58-4a9c-bd8c-\
75dd02ff20bb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"error", "[", 
   RowBox[{"a_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "1"], 
    RowBox[{
     RowBox[{"u1", "[", "x", "]"}], "*", "k", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", ".95", "a"], 
    RowBox[{
     RowBox[{"u2", "[", "x", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "k"}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7761057097613*^9, 3.7761057351979084`*^9}, {
  3.7765013773793445`*^9, 3.7765013806448593`*^9}, {3.776501506822878*^9, 
  3.776501511744576*^9}, {3.7765083316979*^9, 3.77650837785102*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"fec83f49-2029-47b3-a703-a315b23426f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"error", "[", 
    RowBox[{"a", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", ".95", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77610574177577*^9, 3.776105758868961*^9}, {
  3.776502151126906*^9, 3.776502154704878*^9}, {3.7765083896162367`*^9, 
  3.7765084773029613`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ac39d507-68cd-4f72-b0fb-3f76dbda8470"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXlYTd0exzNGyDzLeJDKmDGy5fXiGMs8RwhxKkMUIQ2kUSdUREXImPFE
yBQZMiWKY6gMUYoMvRm71l2/79q95z7XP/d5Pu9+Tmt/9t6/vfZvf9e+reyc
xswtr6enN7SSnl6FP//7YoDNfHv7Qilm0sEEX7Ol/UcvcJ6/73Cn/qtnG/eL
85J5So1RxU+sRkpN15fWzIuW+ZmWES0zrKZLZ+IevTRNkvmQHZVmzyyaK028
dThBpZV5twNJPR5aqaSvBd7+8SUyD9L2rdhWuUQKrTXNtqj+B8Er2oWrbItc
pK7m7J/M3d5+eRQR4SbdHW+g72It80JHmwHpVqsllWv2E41K5se+Pxqn7+Ih
Vdt++kiJn8zfW/psVCg9pf3ngz0t4mTefp15kpWRtzQky36C+1WZz0rO/jSj
yEd6Xb6/SVKOzCP1N7V3v7pB2tC2/u/SUpk3HN5/WkTERgmeHTr1j2irPC4d
SlPsZ37gGbx/zPS4TJOFwjP42163xhp3cxaewbtGzRv76s4S4Rl8ZeWKY6MX
ugjP4Mmq6DHTqrgKz+DVH/Yb02jPSuEZfHy/xzbMJzyDR+12sdn0fK3wDL6s
0kbjvZbrhGfwRn0mGlcMkD2Dn1/U1tjuiZfwDD4r+nP7i8ayZ/DK6ZfaN1+x
XngGzyT/8Hzo7eNShfKyNC8s4QQ7f+AZ3PtFqHKH5wrhGXxXe+cXT+q6Cc/g
SU4jXJgfeAbXJhhXm9DTXXgGLymtGBOaslp4Bq83NLvn/UlrhWfwxtdn2LPz
E57B278f0ZX5hGfwnrX6/hxU2VN4Bh/UvUPKyzuyZ/CxkxqqPcNkz+Cz3CtN
bzXTW3gGdyb/8AweQec/PCsS65knqG5J5+0cN7LxwzN4zxXuLXITPIRn8CP+
fqeuffcQnsHbRYcPZ/sLz+A7T+7N9vFYJzyDN7xxcsXcK+uEZ/DgZ5dr/P3H
DzyD63+6t5td7/AM7lH5RR92fsIzeEmTgrvMJzyDO3f+MfdKbS/hGfzdX1V/
7honewafSf7hGfwxnf/wDD6V6g8837na/oRCmSalfNPrY/vHPzyDx/3utG3t
ER/hGdy/wvQfUQt9hGfwRVX8p7HjC8/go2ucOZ/12lt4Bu9aJ7d5ud3ewjN4
vYb1Pdj5A8/gxU3/ymbjh2fwzJaLB7L9hWfwxLZRu5kfeAaPNLldcfc42TP4
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
4NlVCz53M48SnsEzc5uFpaZGCs/g96+OsLC33yY8g9/c7f6stDRMeAa/tO6Q
B6sz8AyeSP1zeAY/YVk9hc1n4Fn0sXu5prN5IzyDD/6c0YTNA+EZvGd8r1ll
PYOPetRpNJunwTN4l1GFWtb3g0/vlU7Vy+kdlVwHvN5R8Gae8PnD36r0tOqg
1O5U/Y5TWjgInx9bx7520u6VxljOSPr6e5Hw+Yr65MEOfw1k75vg83hM2pyz
qu3SoKQU6VT7JcLntru8T3uj8bmMVjOXCZ+Vfpz52VHpKTVf3dKAXXfwebMj
73fV1+kfDnLj4y/2b+tZVF/uE7pv5ONPK3Jut2Kr3A90bsnHH9JKfzJ7/w6f
cxL4+PuMfziJ5dPg83gkH//1AG3bkHVyH2/bTT5+6Xrji3fqyP23M0FLzqgV
l6Raxz4fYO8v4HN592pL9fQuSvXSovpJ3ZcLn/Ynh0x+qjkvvfp+dv7vM8uF
z+xS19QE1VlpvenQzux9E3xOHX5AClWckf6ZPWhT0yBX4fPRVu1xR61G6h17
1N/tqdyPtc6p3m6Y+qQ09H1AK9bHg89p1Nf6nfLv/ltjGv/wnAFH2XMWfD4y
5+Nfpzc1hb1Ph8/2J/j4d7Y+fHBR7zJ91N98/LuH9ppe1mfTYXz8m5Z8026s
LvvcuoWPfy7lV1EHLmbx8bdPa2vFnnfguevMw+8VypvS+1nXe7LnFHgurDR4
r1pxQ9p846Qdy6vA88GDz2319K5LrTKGflr3ZY3wPN9mRWNH7TVp9fsRzeo8
WCM8t/2n5gOt5qp0oOqlLLY9POdExgUo1cnS3k57JPb78Bw10GpwguqKdPqw
ezM2HnhOP8P7Wh+L/t1/C7Hl44/87RjFODyPovF3rvn3/M0Ocv+tGo3/QJux
v5celj1ft+bjr9EvYlZZzz7FfPyTKL8KzwNp/H6ut4OP9Zf7nBlWfPwHI89O
Yf0xeE5v9CVYq7kvjcxvEM44PJ9YeHGRWnFf8suak8x+B57VSQFKpfqedORx
3nn2d+HZufbkdnp696TER3HebJzwvOP6sMqO2jvSkYydjZb92S94nuL48oJW
c1vyf5rqxjzAc8N67m5Kdao06nW3OOYNnvdSX+uVTv/Nm8Zf0GRHEOuzwfNs
Gv9zo85VWU4VngfS+DWKb9arWst9oZY0/hWUX4XnXyl8/C379xjKtofnRBUf
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
            "]], Polygon3DBox[CompressedData["
1:eJwtmnXgVEUbhe/MLKioqFggIkgoAorYLWB3ByYqFgZ2ByqK3Z3YYjdgYovd
n4qBiYHd/T0P7/wx3Pv8ZnfZvTvzvuecuwvuPGLTfXPTNAfyT4vjPKVpduK4
HHwVf+jG2BheOzXNP5z/wN8Hw504ng1P5PEj4N2YvwLOjDngvxkfcv4/5k/j
/Hjmx8GJMTv8J+MDzvswvzfnq/F6t8DvwGfAo3j8BPht+HT4BHg8/Bi8H7w7
fCXcnbEZvD78H+eL1vezJq93O/wRxyXgmTieDK/M/LHwlvCD8FPwQfDePP86
+BF4H3gYfBncnjEAXgT+mvOPed6ScDuOp8CP8vh94V2ZvxyelbE43Bv+ivPf
eNzacDeO58L96uPXgG+Df+e4Drwgx/Pgd5k/Ez6R5z8AvwWPho+F74e/53GD
4I4cz4J7MDaHN2C+adM0i9XrsxbzdzD3cL2+uzB/Kfw6PAo+Cr4HfgM+ET4a
vhfuWz//6jz/VvhN+CT4GObvg+dirAIvA//A+faMp+FH4BX4/9/n8efBp8GP
MLcUfAi8YY7nLw0fCm+U4/MsDx8Jb5pjfXRmrAUP5Pm/uyCZ38TryfwF8Irw
0fDmOdbHAPhAeD34bniJ+n2un+Pzzc9Y38/D6/3B+SK+Z3gLuC3vd2F4W3gz
uAX3hrfz9eE28JK83sFe3xzX5z34XPhU5h/2++LvfX2bHE9y7TOWgfsz/y3n
U3j8hfCZ8GPwlzxuBbgDxzPguRmrwssy/yPnc7pG4aXh7zmfzPPPgU+BH3Lv
eA3hxeBvOP+A+fPh0+FH4Q6MZeHF4e84/4r/Z0V4To5nwvMx1oRXZf43zr/g
78vDc3A8HZ6B19va58MXwTsynoUn8viVuB594B3cP/AMcD94KLw1PBP8Cs8/
Dj4cvpO5royNXI/w35y/yvzx8BHwXfCM8BB4AP/fxXBPxhauF+YTr9cRXh1e
Gf6F8yd4/AHwcPgaeAHGhu53+C/OH2d+f3hP+Gq4f+V1cryfD+EL4DOYnwg/
WdfPXvC1cBfGBu5P+E/rB/OXwefCj7u36/+/bo7334mxBrwK879y/hrzJ8BH
pliPCzG2gjeGC59nKs9bDp6d42nMrcTjj3E95tjvfb3m8FY8fkYev2q9nkNy
fP+9GFu6f5jPzK9e9+cOOdbXPIyB1m/mf+J8tbq/t8/xeQfW679NjvU7qL7f
bXPs18G1PmyXYz2tAB/l/shRf9dgXAlfxOt35//vyfwe7lfmb7Le51h//zE/
1e87R/38Hf4UfiVHffwN/gR+Ce4P/wp/DL+fo7604fiF9S/HfvqX+c+tRznW
/z/wZ/AvOdZLlxzXf53ab3bO8X39l+N6LpRj/f2bY/32yrFePsyx/9py/BLu
zfOPgAfBc/D5fs1xvRfIsV9GMv84fCk8ua6vkfZHuAOP/ytH/eiRo958m2N9
zp2jXn6XYz/Mk2O/f1Tr+Yw5+suUHN/fDDn6x6c51v8sHKfBn+fYv+1z1JfP
cqy/WXPUg5UYp9Z+28n1A59d68f88CrwWfDJcOe6Hq23s+WoF/YX+/28OdbP
Tzn6a2eOP8PTcuyPuXLUpxUYJ8Mjeb15eb3lW3E93P/zwCvCp8DHwR3hn3P0
q/lz7OelGMP9vlJc739y1OeeOfaf9d/6snAO/bFe1QfD4Cfhdas+2AV+At64
1ufh8DPWnlo/94Sfdm/BV/v+4JfgTWq/2gt+Ft601tO94UnwZrVe7AM/B9/u
uoS/ZNzB+VjGx5x/xbjTPchYkPMvUuifw3j+A/A5/P1teDzHeeEpzL8PD6n1
5QD+/jy8DXx5E3rsBfhRjt3gqSn0knrCetI1R38cwePv8vuF34T3h++BT4P/
B7fgYXC/3EzXB23gXTldNEd9bQvvZj/JUU+s/7vbv3LUqwzvDPeB/+X1CrwL
3DeH3nqG48Lwd7y/j+Cn4YXgb+Ep8B48/ma/f/7+GrwffLf9E34L3hO+xfUK
v+7za7/dh+dfD+8MXwcfxfyr8LHwY/Al8Lv2Hvga+wn8MrwTfK31F36l7ue9
4MHwzfADHNvBn/D6+8EDWnE9doDb83knMT8f/CN8pL0P7gT/AB8BPw/PD/8M
Hw0/B3eGf4KPgt+GF4ETx1GuT8ZN8BjmF24T16sj/D18uOuZMRa+Gu7N/AvM
d4F/gY+xfjMurf2nG/NrwWP8/HBPeB34RvgqeCH4dZ7fE/4LPq7W3+7wH/Cx
tT73hhuOJ9ivOPYA/2R+pPWfcYnrFe7K660N3wBfCfeCF2/FetoenhWeqRXf
d9dan9u1Yj10q/W/1Yr13q6uj3f4//r433M8EZ7MsR/c4jganqUV/WDhFPV4
ZsZi1u8U/aBtK/ZDx9o/2jC6Wq9q/xjN9/2c15PXew/+FX4Nfi5FvT4TfhW+
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
KfBk+Fp41Tah4Q6v68P19FHVix1r/TSz+bP2B7OcT2t/6V77kRlf79qfzP6+
rv3K/qX+1tPqbbs1kZXqeTvW/mSWqkfWK5upmmVOrfW7d+03evKutZ6bpeqh
9dJ6bLNWMz6z4kFN6HczSe9FDGwiqzRTNds2czRrNbMzizdzNMvTU+ut9dBm
o3povbSaVG1q5vVYiu/Y7/q72g/tj/qJD2v/7FD7rZlm/9ovzTrNNL3XYQZs
1mnmpR/RX+gXzGS9l6E/Mas1Y/XelJmu2asZpfdSzJSnVU17QK231ns9aYcU
Gc5DVUNPqPvN9393CW2vZ9G73AOv14TmV/t/os52b3A81b1fwtvogfRCd5Z4
r75nvZSextfrnsPr6HFvzbGn9L5qdr2he1YtfwdjtSY8ml7NNa+3d8+6F+yx
elH3oL1XTT++9gu1/m2MlZrwOHqdW0t4HTWIWuSWElpEz6P3GQ9v04QH8/3d
X8K76dH0auNKeDM9nd7uvBLeSw2vlh9b4rv1O1b7qLH1ttYktfe9JbyjnlHv
qAZWCy6SQxvfXsKL6kH1ompEP/98VTveXMKbqbHUWhNKaGk9md7svvp6elS9
qppE726NVKuoQbxXaQ1Um1gzJtb1aS2xppnFWKOsddbAsbW+WxutsTfVem3t
teaZ1VjjrIXWVLMYa6C11hps1qCHsTZfVsJbfMb4o4Re1mf4t99LrAd1pnrz
L/h4PkO/FGvsDf5+Fn/7pgmN92+JNbdiimvkWjwM7gL3gp9yjfGYeZrwyHpl
e4BZip7J3mDNv7P2K3uBHunZun/1Ttbcp1NoPGuxNfmZFB7SWn23NakJz/tb
CY87qdYDva813uxQT2jtt4ZaD9T31lZr8lMpPJm12h5hlqkHtHdYY59M4Wmt
vdboq2v/tHbbM+6q/dX6Ys8xa9Wj2ovG8f5msDbyt33UziVqszVab39hiWzA
TMBs4LMS2kNNojb5vIR2UZOoTb5QMzWhcdQ635TQAmoGtcPUEtpHzaP2+dY1
34RmUDt8WkLrqIHUQmp4veKuObT9lyW0ixpBrTCthBZRY6g1virhDdQ4ap2v
S6xN16haQs+gNzioeomHSvRuMx+zn5/UVE1oCLWEHktvcW4O7/V8idpojVSr
flxC26nB1GIvlNCmala167MltLkaU635Ygntq4ZVy/5YQquoYdQyQ1ux11wD
roXh9fOckMPr/FxibThv7/i+vj81lFrqk/r51Jxqz+9KfPeuAbXXDyVqtzVc
7fxnib00lfG3r8XYs4mMzKxsTIleac/U+wxrxVp0zbv2LymRNdkj7BW7tWLt
u0fcK7u3Yq+45l37u7Zir7hH3CuXlvDCZlZmVzu3wou7pl3bZ5foffZAveS5
JbIQMwmziV1asfbdI+6Vi0v0KjMus65zSmQXelK96UUlsi8zL7OvB0pkgWaA
ZoF68vZN1Bxrz3UlvKeeTm93TQmvqOfT+11eQquoWfTGV5bwinpovfRVJWqN
HlIvac2x3nyTohZdbw1twuPqda8o4b313Hrva0t4ST2qXvXGEl5eD6+Xv7qE
99Sz6l1vKKGN1Eh6+5tK1EYzALMAa6Tv5+8UtdM9P0OK9zSuemK98ZRan/wN
g79l8B5xhxKZlvc+9BdmXWZQZvlmbmZTZv5m/8P8zCUyOO9t6h/N5szovBdq
hmd2Z4butfc70Pd6T81eak81j/U3KP4WxXvSs5fI4PSj+jf9jfcgvBexi9es
xD0q71WZ2XcrkbGZNZsRmr35mxV/u+I91PYl7pnaa+255pXmUWZZC1krS9xz
tTZYI/SjZnLeG9YfmdWZoVmrrFn6EzM8/ZN+Sv9mJmcWP6aJrM7f0PhbGu+B
tyuRGerX9G/6HX8jYq+2Z5trmdn5WwIzQbM870H62wbzYO9Neo/Je027wguU
uEfhvQrz7O4l7kH62y/vKXtv0nv6/hbEe+ze6/cep78l8R6+9z69p+xvO7wn
771mf2Phby2GukdLM/3mgb+l8jcF3jv1NwP+dsV8298SmMl6r0P/blb7fzkG
0dw=
            "]], Polygon3DBox[CompressedData["
1:eJwt2HfcVmMfAPDnue/naWhqSUPSoCGjgbS3VDTRpEmbhlXR1ERKhYZRQtaL
MlJ5UwkN0t5GXiO8yCrJ9/c5zx+/z3X9vud37uc+51znuq77Kd97WIehqYyM
jCMiW6xOZ2RcBjpkZmR0leeVfy0GsZlsLusg3yqasX5sKKsu/1L0ZZPZg6yN
PE9WRsZp+cWiupggf5dfri7LHzxLP584i59x/BJRx7m7HX+Z59VWZTXZF/rb
WQvtADac1ZBf6dwb2ANsilgtzyv+0a8haqvb5fgVrL12PJvGrnDuV+I2Np09
wq6X11LXmN3O7mZV2EpxLqvLmrJf9Ouou157P5vKrlTzhijJrmJN2M/6b7EL
tE3Zteyk/rPsL3kpUYHtYNk+73d55fjebDt7SV2WtlLcQ3ZQ/zl2Sl5GVGI7
2dr43tpc7mlh/bNFe583k72rboO6kex5kcHKsyq6e+Phqzsizxa5xCH5CnUp
xyrIqynZr/8Cy9RewKqyffpptT/KzxNlxV3y5epO6pcWFdV9pm4pOyEvFnVs
C1vGfpOXiPPZVvYmK69twlqzv+KafOYf8gtjfLBt7B11l2rbs5tYnrhP6n6S
l4t7yDY5/gz/VV4k7hf7mD3NfpEXju/IPmK1ndtKexe7U7wiX6OuZjwX97Sg
fiHxokizijGenXsg7lE836h1TkP5cu2TYom4WFzFntJeLW7Wf9i5C5zbwjn1
2C1sNnuMtWJ1WS/2EJvPWrKDoiu7l01kjeVN1A1nT7Ln2A3sgLiJ3RPvGmsk
b6ru9vgO7Hl2I2vDJrE32Otip3x9OvmuZ7nekjHexX7RmY1Wc59z68t3irZs
KBvNasn3iU5sFBvH6skPi+5sLJvMmsoPiW5sDJvEmsh3iGvZYDaSXS7/VLRm
g9gIdpn8E3ENG8juYJfKd4l2bFg8N1Zbvkd0YCPYGFZX3tD13coWsCWsHWvM
hrElbDnrzPaKjmwkG8uujmtVN5mtZO+yQaw+68/msUfFRnkjEZPpYvmz6rqo
a8AGsPlsMWsb35dNYavYGjY4rp/dz15lb7EB7Ho2NeYPto4NjXdDnB/zp2MN
Yh7RficfoT9X3SJ13eSlRSlxSYy7eA+038rv0J+jbqG6rjnPOJ51Dcfrxruh
/Z98sP6suDZ1HXPmk5hXqjpe27GF2i/kffQnqZul7lp5OXFerCGO1493XFtc
XkxU178i7o/2mHyg/gznznFue3lRUURUc7yOY4u0n8t7609UN1Nda/k3Ygh7
kM1jnWLcqr2RTWUPsQYxVti4WEfYKtY3xhS7j73C3mT92XXsgZh72Fo2hLVi
Y2P+ZStZv1h32J3xfrOXWQ/WnI2O58BeYt1jXWSj4trZUrFVfjKdzMExF7/o
2Cl5WVEm5jHH68UcqT0q76l/n7oH1DeX747vyIbH/MrqyFuqvSvWgpirWE9W
gOWOdY41jDU9rjPWVm01Vot9GfMA+1leMNYf9iH7iY2P589WsNvSydz+gzy3
yCOOyk/w2epei3VW3d3y/4sJMcbi2tjAGKdqq7KuMT/Hc5LnE9kx18rrqzuc
StbuLqlkzo25t7i5Z0M6GbP5s5P7E/fpfHUXshvU9HLuGf0f+ZgYJ2wZ6xP3
QOQXF2Yle4zH4hrk98aYjeehrnfO96vCWseaLP6Rv59O3oF82cm7E+/QafES
+0jNDuf+I/9vOhnHedWV0D9HbEwnz7BAdjL+4z3YlE7egYLZyTtbPmfenZhK
xkWMjyqOdWGPpJJ5OObjmtk5eyJxUVayBj2uPU9U0u+spofvclq/LKuo7cS6
s1P6pVk57XWsC/tdvwyroO3IurG/9W9hT2nXs/dFA3+3HKvMush7xvXqV2aX
aHux/ixXrHesGuvGeseWImfcj0wl82HMi+V9XnFWgrWQt1P3Y85a21J7K7st
1mZ1xWKeYM3lbdUd1y/BztG2ZNexn/TPZgW1DVhzdkz/uL99j/YJ9gy7RV5I
XX5Wj10tpsd5Ik+MOXkjdUf1i7Ji2masDftBvwgrpG3IWrCv47PTyR4l9ior
5H/Gc1dXOpWMnxhHs+WFRQFWX95M/Vf6JVkZbRvWkf2qfy4rq23LOrETsaeI
/YK2B+sb2zJ/41cxg70YY4PdkfN3S6WS64rrO5GV7LP/zkz2YLEXOxbPW1RX
113ex7lp5/4mHmPvsPXsfvkvYjpbEXsBdnvO+tYvleynY19dyjP6nt8dY1H+
tLqbYx4R09gL7DU2PNadGKusHevMftOvxGpoe7J+8VsjneyNrkwl80PME7Hv
+CzeETZEPkpdzZxnmS+V/H6I3xHH5dti7mX95cPUXSzvyuezD9g2Njb2GmwB
28y2s3Hs5tifsU/YXjaF3cTmsU0xX7MxrBN7iK1jH7DRsTdgD7K1bBMbFXsN
NoutiX0AG8HOiH3yk/LC4o908r49rW4H/1QczEre/Tmp5P2L93CfvLd4hn0m
3+/cqc7tzB5m77HN7E62OZ3sNwu7bxX1K4lese9k29XtUTc51hO2mG1ju9kk
ti6drOO5s5M1N9beV2ONZ5epu0rdNzEHOzeXtk7MD+yQ/tsxL2mvYR1Ypvz1
+AxWK8Yk+17/Ruc+qt3ItrB71bwWazyrGe8l+y6V7Ktjf10lK/kN84S2h1ik
v1XdLnUTHf9P7EPY5awu+zbGtrqF2i1sJ5ug5slYk+T5xblsc9y3dLKnyJOd
7EViT5LbuX+quUhcqu6TWF/YXO0G9jG7R11ftoztimfGprNHxEH5mYzkd/NK
x+ewQyxT5GKr2Gx2QH46+ZmV8Qabyw6zdKyt7E22KtY4bWN2DftT/0PWKObp
mCdZZXlm7M/k54hy7D3Hf+ePa1fHPM7Gy+eJL+T54r1i7zj+MWui7cMGs6rp
5EsdzVnfY50fIt/Cm6rrG7mSavL+fDnbww6zmWwAe47tzUz+fzCLPSz2y0/F
fCNed3yBzlesUDyT2AOxlHO/kZcU57N1sVarOyY/WxRga1g/dc9qd7NDbEZc
q/haXlQUZGvjmtQt1e5kB9g0NYvEd5kxQD1zzfuOL2HH5VmiBNsY6xX7XJ43
gr0dewX2bewL5EXFejaffRnfLe4rW80Ws+/lKVGcbYj5J53szQtlJ78L4/fh
EdGDjVM3RV0z+b/1VPo8
            "]]},
          Annotation[#, "Charting`Private`Tag$27183#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zm5c3LPdzJT0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi6Fd/Ca79rWs+61bKAd
rjDOVe5yjXthJu5zgwfc5JYOw3t4xB0eM84T7vKUezzjPs857R43/NCFXsId
NWa2LQ5xkX2cYwcn2cxx1nGEVRxgGUvVZZ3BVn46o4F3rOExK8K9WBTOtu+K
b8rVU9irQjPmsIAx5jM77GEWY8xkFjPCeUxnKlOUZp3E1PAbh2f8VbJ+wnf6
kjGiGR+3//+HP+YPSw4=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{690, 1015, 1023, 1349, 689, 1128, 912, 691, 1129, 913, 692, 
        1130, 914, 693, 1131, 915, 694, 1132, 916, 695, 1133, 1024, 1245, 696,
         1134, 917, 697, 1135, 918, 698, 1136, 919, 699, 1137, 920, 700, 1138,
         921, 701, 1139, 922, 702, 1350, 1016, 923, 1017}], 
       Line3DBox[{704, 1025, 1246, 703, 1026, 1247, 705, 1140, 924, 706, 1141,
         925, 707, 1142, 926, 708, 1143, 927, 709, 1144, 1027, 1248, 710, 
        1028, 1249, 711, 1145, 928, 712, 1146, 929, 713, 1147, 930, 714, 1148,
         931, 715, 1149, 932, 716, 1150, 933, 717}], 
       Line3DBox[{719, 1029, 1250, 718, 1030, 1251, 720, 1031, 1252, 721, 
        1151, 934, 722, 1152, 935, 723, 1153, 936, 724, 1154, 1032, 1253, 725,
         1033, 1254, 726, 1034, 1255, 727, 1155, 937, 728, 1156, 938, 729, 
        1157, 939, 730, 1158, 940, 731, 1159, 941, 732}], 
       Line3DBox[{734, 1035, 1256, 733, 1036, 1257, 735, 1037, 1258, 736, 
        1038, 1259, 737, 1160, 942, 738, 1161, 943, 739, 1162, 1039, 1260, 
        740, 1040, 1261, 741, 1041, 1262, 742, 1042, 1263, 743, 1163, 944, 
        744, 1164, 945, 745, 1165, 946, 746, 1166, 947, 747}], 
       Line3DBox[{749, 1043, 1264, 748, 1044, 1265, 750, 1045, 1266, 751, 
        1046, 1267, 752, 1167, 948, 753, 1168, 949, 754, 1169, 1047, 1268, 
        755, 1048, 1269, 756, 1049, 1270, 757, 1050, 1271, 758, 1051, 1272, 
        759, 1170, 950, 760, 1171, 951, 761, 1172, 952, 762}], 
       Line3DBox[{764, 1052, 1273, 763, 1053, 1274, 765, 1054, 1275, 766, 
        1055, 1276, 767, 1056, 1277, 768, 1173, 953, 769, 1174, 1057, 1278, 
        770, 1058, 1279, 771, 1059, 1280, 772, 1060, 1281, 773, 1061, 1282, 
        774, 1062, 1283, 775, 1175, 954, 776, 1176, 955, 777}], 
       Line3DBox[{781, 1177, 956, 779, 1178, 957, 783, 1179, 958, 785, 1180, 
        959, 787, 1181, 960, 789, 1182, 961, 791, 1184, 1185, 962, 793, 1186, 
        963, 795, 1187, 964, 797, 1188, 965, 799, 1189, 966, 801, 1190, 967, 
        803, 1191, 968, 805, 1193, 970, 807}], 
       Line3DBox[{806, 969, 1192, 804, 1296, 1075, 802, 1295, 1074, 800, 1294,
         1073, 798, 1293, 1072, 796, 1292, 1071, 794, 1291, 1070, 792, 1290, 
        1069, 1183, 790, 1289, 1068, 788, 1288, 1067, 786, 1287, 1066, 784, 
        1286, 1065, 782, 1285, 1064, 778, 1284, 1063, 780}], 
       Line3DBox[{809, 1076, 1297, 808, 1194, 971, 810, 1195, 972, 811, 1196, 
        973, 812, 1197, 974, 813, 1198, 975, 814, 1199, 1077, 1298, 815, 1200,
         976, 816, 1201, 977, 817, 1202, 978, 818, 1203, 979, 819, 1204, 980, 
        820, 1205, 981, 821, 1206, 982, 822}], 
       Line3DBox[{824, 1078, 1299, 823, 1079, 1300, 825, 1207, 983, 826, 1208,
         984, 827, 1209, 985, 828, 1210, 986, 829, 1211, 1080, 1301, 830, 
        1081, 1302, 831, 1212, 987, 832, 1213, 988, 833, 1214, 989, 834, 1215,
         990, 835, 1216, 991, 836, 1217, 992, 837}], 
       Line3DBox[{839, 1082, 1303, 838, 1083, 1304, 840, 1084, 1305, 841, 
        1218, 993, 842, 1219, 994, 843, 1220, 995, 844, 1221, 1085, 1306, 845,
         1086, 1307, 846, 1087, 1308, 847, 1222, 996, 848, 1223, 997, 849, 
        1224, 998, 850, 1225, 999, 851, 1226, 1000, 852}], 
       Line3DBox[{854, 1088, 1309, 853, 1089, 1310, 855, 1090, 1311, 856, 
        1091, 1312, 857, 1227, 1001, 858, 1228, 1002, 859, 1229, 1092, 1313, 
        860, 1093, 1314, 861, 1094, 1315, 862, 1095, 1316, 863, 1230, 1003, 
        864, 1231, 1004, 865, 1232, 1005, 866, 1233, 1006, 867}], 
       Line3DBox[{869, 1096, 1317, 868, 1097, 1318, 870, 1098, 1319, 871, 
        1099, 1320, 872, 1234, 1007, 873, 1235, 1008, 874, 1236, 1100, 1321, 
        875, 1101, 1322, 876, 1102, 1323, 877, 1103, 1324, 878, 1104, 1325, 
        879, 1237, 1009, 880, 1238, 1010, 881, 1239, 1011, 882}], 
       Line3DBox[{884, 1105, 1326, 883, 1106, 1327, 885, 1107, 1328, 886, 
        1108, 1329, 887, 1109, 1330, 888, 1240, 1012, 889, 1241, 1110, 1331, 
        890, 1111, 1332, 891, 1112, 1333, 892, 1113, 1334, 893, 1114, 1335, 
        894, 1115, 1336, 895, 1242, 1013, 896, 1243, 1014, 897}], 
       Line3DBox[{911, 1022, 1021, 1352, 910, 1348, 1127, 909, 1347, 1126, 
        908, 1346, 1125, 907, 1345, 1124, 906, 1344, 1123, 905, 1343, 1122, 
        904, 1342, 1121, 1244, 903, 1341, 1120, 902, 1340, 1119, 901, 1339, 
        1118, 900, 1338, 1117, 899, 1337, 1116, 898, 1351, 1019, 1018, 
        1020}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1128, 252, 1247, 488, 280, 1251, 503, 295, 1257, 
        518, 310, 1265, 533, 325, 1274, 548, 340, 1285, 563, 1178, 355, 578, 
        1194, 370, 1300, 593, 385, 1304, 608, 400, 1310, 623, 415, 1318, 638, 
        430, 1327, 653, 445, 1337, 668, 460}], 
       Line3DBox[{253, 475, 1129, 254, 489, 1140, 281, 1252, 504, 296, 1258, 
        519, 311, 1266, 534, 326, 1275, 549, 341, 1286, 564, 1179, 356, 579, 
        1195, 371, 594, 1207, 386, 1305, 609, 401, 1311, 624, 416, 1319, 639, 
        431, 1328, 654, 446, 1338, 669, 461}], 
       Line3DBox[{255, 476, 1130, 256, 490, 1141, 282, 505, 1151, 297, 1259, 
        520, 312, 1267, 535, 327, 1276, 550, 342, 1287, 565, 1180, 357, 580, 
        1196, 372, 595, 1208, 387, 610, 1218, 402, 1312, 625, 417, 1320, 640, 
        432, 1329, 655, 447, 1339, 670, 462}], 
       Line3DBox[{257, 477, 1131, 258, 491, 1142, 283, 506, 1152, 298, 521, 
        1160, 313, 536, 1167, 328, 1277, 551, 343, 1288, 566, 1181, 358, 581, 
        1197, 373, 596, 1209, 388, 611, 1219, 403, 626, 1227, 418, 641, 1234, 
        433, 1330, 656, 448, 1340, 671, 463}], 
       Line3DBox[{259, 478, 1132, 260, 492, 1143, 284, 507, 1153, 299, 522, 
        1161, 314, 537, 1168, 329, 552, 1173, 344, 1289, 567, 1182, 359, 582, 
        1198, 374, 597, 1210, 389, 612, 1220, 404, 627, 1228, 419, 642, 1235, 
        434, 657, 1240, 449, 1341, 672, 464}], 
       Line3DBox[{261, 479, 1133, 263, 493, 1144, 285, 508, 1154, 300, 523, 
        1162, 315, 538, 1169, 330, 553, 1174, 345, 568, 1183, 1184, 360, 583, 
        1199, 375, 598, 1211, 390, 613, 1221, 405, 628, 1229, 420, 643, 1236, 
        435, 658, 1241, 450, 673, 1244, 465}], 
       Line3DBox[{265, 481, 1134, 266, 1249, 495, 287, 1254, 510, 302, 1261, 
        525, 317, 1269, 540, 332, 1279, 555, 347, 1291, 570, 1186, 362, 585, 
        1200, 377, 1302, 600, 392, 1307, 615, 407, 1314, 630, 422, 1322, 645, 
        437, 1332, 660, 452, 1343, 675, 467}], 
       Line3DBox[{267, 482, 1135, 268, 496, 1145, 288, 1255, 511, 303, 1262, 
        526, 318, 1270, 541, 333, 1280, 556, 348, 1292, 571, 1187, 363, 586, 
        1201, 378, 601, 1212, 393, 1308, 616, 408, 1315, 631, 423, 1323, 646, 
        438, 1333, 661, 453, 1344, 676, 468}], 
       Line3DBox[{269, 483, 1136, 270, 497, 1146, 289, 512, 1155, 304, 1263, 
        527, 319, 1271, 542, 334, 1281, 557, 349, 1293, 572, 1188, 364, 587, 
        1202, 379, 602, 1213, 394, 617, 1222, 409, 1316, 632, 424, 1324, 647, 
        439, 1334, 662, 454, 1345, 677, 469}], 
       Line3DBox[{271, 484, 1137, 272, 498, 1147, 290, 513, 1156, 305, 528, 
        1163, 320, 1272, 543, 335, 1282, 558, 350, 1294, 573, 1189, 365, 588, 
        1203, 380, 603, 1214, 395, 618, 1223, 410, 633, 1230, 425, 1325, 648, 
        440, 1335, 663, 455, 1346, 678, 470}], 
       Line3DBox[{273, 485, 1138, 274, 499, 1148, 291, 514, 1157, 306, 529, 
        1164, 321, 544, 1170, 336, 1283, 559, 351, 1295, 574, 1190, 366, 589, 
        1204, 381, 604, 1215, 396, 619, 1224, 411, 634, 1231, 426, 649, 1237, 
        441, 1336, 664, 456, 1347, 679, 471}], 
       Line3DBox[{275, 486, 1139, 276, 500, 1149, 292, 515, 1158, 307, 530, 
        1165, 322, 545, 1171, 337, 560, 1175, 352, 1296, 575, 1191, 367, 590, 
        1205, 382, 605, 1216, 397, 620, 1225, 412, 635, 1232, 427, 650, 1238, 
        442, 665, 1242, 457, 1348, 680, 472}], 
       Line3DBox[{277, 682, 1350, 683, 278, 501, 1150, 293, 516, 1159, 308, 
        531, 1166, 323, 546, 1172, 338, 561, 1176, 353, 576, 1192, 1193, 368, 
        591, 1206, 383, 606, 1217, 398, 621, 1226, 413, 636, 1233, 428, 651, 
        1239, 443, 666, 1243, 458, 685, 1352, 686, 687}], 
       Line3DBox[{459, 667, 1351, 684, 444, 652, 1326, 429, 637, 1317, 414, 
        622, 1309, 399, 607, 1303, 384, 592, 1299, 369, 577, 1297, 354, 1177, 
        562, 1284, 339, 547, 1273, 324, 532, 1264, 309, 517, 1256, 294, 502, 
        1250, 279, 487, 1246, 250, 473, 1349, 681, 688}], 
       Line3DBox[{466, 674, 1342, 451, 659, 1331, 436, 644, 1321, 421, 629, 
        1313, 406, 614, 1306, 391, 599, 1301, 376, 584, 1298, 361, 1185, 569, 
        1290, 346, 554, 1278, 331, 539, 1268, 316, 524, 1260, 301, 509, 1253, 
        286, 494, 1248, 264, 480, 1245, 262}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
SVxPh6PqaM85H8B0MhzXU0sZSm4hlw6efj+N51mQnVoCy3OE+yWnccR9Mov4
sTwTeKt8sDwzNjApacqnA6nztnien1OJ22F5rrZcdPiEeFcJB57nTwvnybA8
z3ZpbO1WSAepJKR4ns+FrJzD8pxL/m5IB/G9P4gDWJ79yw6vY3m2nWNmjEf8
rCP5MyzP+X5VOvX/sT9nZfz/9+c84nWevxDvdr+jg+V59tDZTuxzXSV05dIr
poNnrJmJWJ5vFx8kYHkYevRZlAvxy58rXbA8L77aE4vlLd26ed9pxM0sP+nO
bR4ts39k9w3L8wzfITHM3i6YMQjLs/jfvbj9axudPMz/ye8tWVieKXyZcP9q
LKdxPWOaLiNYnpsXBXA9BobNzh9kikGfmqYfVjfq3mm5YXVDZHTilrFsMchw
s7+M1Q12rdkgrG7oKYND1HLFQP5hrC9WNx4svAzB6gYtnWFyAuKvzQ5aY3Uj
VtTeHasbBrJMRFb5YjAx7FaG1Q2asmQDrG6k7obUwYj//OsngtWNpNjvx7G6
AXdRT88g7tIVx4nVDTU/xzasbhza2Z8P7ezPg3f25w9Tjs/aI56vH82P1Y3z
AaAb+56KDBzem4K4WjSbC1Y3osk+n8K+1293yxILEbfaJ7uJ1Y08fVEDrA5c
mKIJr0DcQ4tKrrX9aNltMfZ7WN3Yc1MOt6fIYKfG6obLlBhuTx3AjvtPcYt4
jNUNf84vuH/H5zG4HkXxxnysbhxNksX1SBcvSpK71YICN7MobK7gJPcTw+YK
skrbkBjEU8kOrmLzQyfL0B5sfmBgVfiF5gRAldTrjM0Jtz9aWWNzwvehRMdw
xBcDdSWxecD6p/JVbB44tH+VdgPxXo3iTqzvywxulmJ93zXmcB7q74BWWaIF
6+8Xnhi/xvp77hlO61TEm5/ZPcT69Z6lFnqsX8vs7M8LdvbnWTv7cw6WSlo6
z1rQ8dVpGevLYwe3tLG+006bTkD9C2Q1ulNg/bfRmJcP61/+R+4Noj4IuNfN
u7E+u13n+hjrg+VNyd2on4JFd5BzOeBI2e5vWjJYPz10SAC3FyrYWsP6ZvaK
O26/Wngf968/b3AA649XC/lx/90KZLsxPStv2B9hfbCw6C+ux6Ho6+QWVQso
SLRNzqBLg//OqP7YpC2i+Q0oV00dwOa3f2ciSOj5dtOepgVo6rntx+a0f2dU
ZwZzT9LvagFcd4f9sXns3xnNdSf2qiUjTtJg2oTNXf/O6O+e8LsGzVdgikaX
H5uv/p1RH7y2GYXmKHD6kx4DNkf9O/+//XnFf+3PhWLpuRh2t4DLayJ+2Fz0
70wE15R7x9H8AG4OepzB5p9/ZyJYG1AiojkEXAmRosTmnH9nIjic3X7JAvED
E72X3rEeKft3RvmUUsbtk69UncXmln9nIujgGMD9U79YuoDNJ//ORNAKg3E9
XUoOe5Ae4Bm9H9czu+Vduh7ZAZZtPDJPwlRonp16tdduAWjdmO2zieoAOXt0
/oTYJ0O+ls3ECPsFcPKFdtYA4tzMkiPRFomQyM2qIu6wAFZJC49cjO4ARWFH
Vu4ZxkPJ7zn6LYiPS56XiUCc2Hxe5ohWDJTQbGi46rgA3BWY9w0gznxqpO2l
YiTkFa+Oq0V8IXLYmyWmA8iI6RhxOz2Ft0e14QmnBXBjZ38uKvBvf/5uZ39+
RCn/lgPiYqmy1aJK3vAP7TBTPuKToqU14Yg//31mgumWM2yh/SY3hrhR20ZL
GuJw0zOc95YF1Mv1qvmNOLjD7f4S8bcbBxOzww6XLUw6JFI8XAC5LAdaMXv+
8l9lp25ZgFELD9w+Qe0r7t9vL+cq4y1noEHXgvt/IUNyG9PzOKFCE+kBxsrd
uJ5476naeuMe4Hj1Y6jtrVQ407Ofua2aAM4kH2nXMOkBnJKmsy41z+Ge188v
utcQwFk2+Z+NiNf8tLw02vgM0qanLrDWEsCeUBr2C6Y9QPHL7xnW9jioW81z
+iXiP+x0DBIRF6dX8eTrjYYuz4Lnj9URgIK02Qsi4jzr8WXswxHweoyD0FPE
Y7NSfouY9QDGo+3l03WhMORO558f/7E/v/Rf+/NXr3oqkhFvL2KTfzHsBVVY
fOjuIR5GHOSHiJtXK5C+6ngII8mYdGMRp2AkvGhHXDkmW7e4wxxaXl44nI04
y5fXx/sQDzGXYDoxz1Z2IDH+5mfEr+9ewO1/bepGF3WYg2k/Im6/fr8X9/9b
6erhlx0PQUIFC+7fKJKhEtPzh5HQkTXsBc7pPML1xH0cGD32sx+0aNzUk51J
gVzDsj2JZATwZr7r3WfEGw7eYxAjfw5nSkwYL5ITwLumI9elFvvByOPDv0mO
PIPSJCYszYg3ran2FCCuWfDUIk0kDsKN16PqFAQwdUNMgHOpH2hxLH86ohEN
s9knLSoQV7i7cdsN8eOjj8VdLSPgnAT5Ry5KAgjsnjZpRJz8TONLJ8pQKG1/
4ZMz4o929ucTO/vzNzv7c4sjxImLiNd/Ef68aukF7wSfXFhCvIUtx+A24sdz
9WfoxB7CHjF/ThYqAlD2cs5yRPyTk0rHMTFz2EZltpcf8X3NjaWPEc8aqqts
Oc9WVqVgmiOK+LC3N26f1uHKyilmDloZTHF7Ur5K3L/o9bs0yD9gp/fD/cfM
g0lMD+04tRLSA8a2WHA9rI78VlfPD4O3jyEhkDwFkohQOdUIzIPevSWUi4jL
C/0ZvCaYBG0DE8N0BeeBCfXnFx4iw0AkW+/l6u0EKMOj82EI8eOHolW2ET9L
vKVsHxYLM29Ttl4TmgcOX+4QbUSHQd14IvxWGgULD0QvlSI+3God1Yb4sQe3
aPbOh8O9GrwMLMLzYIxqRphLbBgE8jGrmAiHQOdFeSGz/9ifd/7X/pxxRdMq
CfHM46NqHvOe8P30UdNuxN9cZP1TgfglRYfM6nAn+CC50XEDcetDzP69iHsP
jTF0hZvBZ+fIPfednwfC+9poRxH/yEEMZw5nKaMvsPdhRHzWnAO3p/2sYtsR
bgZ6SMhwe4b5M7j/g9ZuTVXhTkBa4yvu//C1XFxPmJDulPu8J/i7RoPr4Q7e
dT89YRQYbY7dvnYwGQ7wDtKY6cwBkr3XR5cRz59Ubv2hkwjPJqTzzSMe0zwd
LflsFAhctPyskxQPF7hEo01154BKiUeQB+IcQfVfMkdj4PFrRaLtiLvLU5QX
IZ74+7pHB1cUHBx4yCyoN4fqb7jwPOKLzU/ffrcIh3+NJwWeID7maPqdCds/
vxBu/qoXDJf1kp80Ir6wsz9X2dmfn9zZn1cw8VJeR/xed+KPK5aesOBybacA
4i2FNDYWiNstnjbvHXOEJJU23zQR1xunZ3RAfDmP2/z7mCn05qT5a4J4TwjH
2kPEe5Nq9AiZLGUxsdLGdxHXjGbD7W0DC+qmxkzBLR4K3F76+z7c/+hT54ie
MUdA9/4+7v9xohGuZ1df/yOkB8S9e4XrCYGf3vz6NQbOE6d/+x15Dr1C+wk/
H86CK68DpC+tjoGmHwxR5s7P4Pnio+lWzrPgzFO/P5GIT1beZ+fpiIN2WTnV
vYj/7soe6kL8726FhZqzMdC2YPCqhMssoGUmn6BbGwPSP3MuqwREwhinU+qR
iH8sCtwtj7hO5+9D92rCYJyxbu4Q4s3OT7RtEM81XVxgcw2C0U6yHkf+Y3/+
4L/25xFi0ZofEOfcEyt2utYDuka6XXFF/MpCKEkl4hQvueiH+ByhyNoNzTjE
hTpYWpsRH801zZvlM4U5hhRFrxDfZFuCbYifG8669KL9UJkC+SW/D4hP1dLh
9ptZMpwzfKaAr2o3bk/2Ogr331jLIj/I5wguvdTH/V940YDrmXwxZXGq1gOY
BxjgeualTjzTEZgAR2kue0nwJMF4yX1p7HEz4G53K/MbxNMuGrUHxSVAwp+R
56GIv2iILl1B3F/52O0Smji4PJLFvYj4mYT0IFHBCUC/1HKs3SUaXlxnFVWJ
nwFVexjc7RBf2fjJ3DIbAdPlfrfGI37BaldcFuKKNY7u1p+fQsfdIkuDiLce
KOxsRbwzTO8cY0IgfBo0kcD0H/vzwv/an5vlXCnZLzQB8osuGzMXusMaagkX
K8S/UPGYHkf8rZeL6TdXBxjcXZDti7hs1C/+c4if1g2q63c1gQny3FbRiBtZ
RLALYX7Cm5uSmg6VvV3UepWA+EcfIm6fRVZ5oc/VBOTv5cXt/fZz4v5fyrKk
Nbs6AH2KUty/T6Yq34+IOuhOfeJVlnIalKYw23vahgiMY4u6utLr4VMBhirj
2ynw99wUzawREVD2Jov45X+FlDffHwvhT4LVxSVrE9eJwM0pRaCqrgHylg2x
C5InQFnRG2mCl4ggs59vxbWvETLE9r8J7I2BI6K3aHrEiWDwRUVl4mwTjJQU
0qj9GAnzd3/XaD9NBBR2oVsHfzdDqZLdiiKHwqD2TbVybjYi8N3ZH97f2R86
7OwP7WmF3Nci66CN//KrjQFvqJRzxc3HnghKyzlC87PqYcV7Ebc6BhfIecHq
VqAZEfTcnPpOVfgVsuecdv22aQGdaap9JnXRc82sTGHf1wbYyT6R6lc5K0Wa
+ns2RoUI0n4cunh4oBFKRZDdCmO0BAZ7z31OlkB6gH9zyVwTvElLN06+6Qy+
+AbykpwhAsYou5vvXUth8ZU/9i7OaVA2pKohr5oIos13DQl/gtApwYogWpwC
523KctZL0HPZbLLR29VyWNpI3vrRLwlaqP1yD/hEBIkt5Ayr9JWQQkrnVPTV
BCh13Cbf+C2at0/uZfjOVwVPJbBbHToWC5kiPLeC0ojAineT7K5KNSyay/xq
vxQJT1i94tqORXM7zcG4+6Y1cN19xLwwMAy6mVw+UhFMBAds/+3flnf2b993
9m+5ZKrb9e6lUMyON1eMzgdqT1D7MH0lgq8Wl8QpCiHcqhzQoLjtAstF4/s/
lxPBG2fK4Nvr5bDJ/dNJHXVLaEQyRMj8jJ47DHfrWDNUwlMvDrC88B6Xylu9
bzT8nghGaywP0/NXwfIRIePe25bA6uUKmWkGETwevBAopVoNaYqjTTwvuwCt
MSooHk8EdzjqzYeRfst3+yO6iN5AS6TyjWEIEdiK56qNNL2AgUuueucj0+DD
W5V/aJeJ4Crrgxvndd7Ce0ROVitiCrwyIyuj9ZMIUn7c3R0+lg2XtfuUHL4k
QXHKBt2ReSKYdn5X++18Lsx7E/Wz/EkCfPxhj27uDyIQlnlK7uf6CeqUPe70
14yF69SXHjVOEMFBrYb+6rICWMam/4HkaBQ8TSvKwztMBB/8uX2MyIogyJiU
qO0Og7wqmxNtPeg5PePf/k3mv/79qoJwMylX6wt4/U+Vyf6zPrDdJV7Ia40I
/o4Ktafov4UJp8m/BIe4wGczErRcK0RgnXa5Y24yGw5beVYu+ljCtNekE3vQ
5zJ5/4juhmgu9Hr9dP34QruUHvfnVYk57N/nf7PtfvQJ/jmtk2weaglkH73L
ypkiAr1XpaIQFsA7HYWsB31cgE563MP7I0RgmvIgex7p54gL73E/7AOKOczY
7HuJQKyfmuOqeSJIqTrIphWTBkl0TS0l1onAxqnojJ9iJLhflxbxfjMF6uo2
TOWiz6Xv4elEcckb5Pq0fY74mgRfZdwKtPlDBBJMjTF5ysVS9WyBrAGoPrco
BSw/2CIC5caVt9zouYvh5rZTvUks7GTInytA/BmzlqqOUiRUdnL6FCQQBSV3
B96RQfzVpuCwuFUiDNdb/7D3TxgcKRyzpkP+m5T+7d/YdvZv2jv7t9TIHwkb
VomgVEOiT0TABwoJKJB+Qva/zXLlzC9FAuXML/SW8S6Q8Y99ZcBfIjhmx8NP
p+wN9tyw9VVOsISDiW686dvo7/LCLrWa01iqkbctfn0Xe9nmNvY/pD/CKJFK
2Rt2aZ7MVEqwBNP53bi9de1vV6NLkbC8+hCzRbwLeMvMU4X5Pz9c3LyC9Dd3
at9BesC+EQ0yTI/Zydo17+1CwOdlvPzWKw2K3Imw3NVJBIFs/fIcpQWAv1dy
2XMwBeYWtRtmDBCB3IMPUT9cPgGH/MWQG3kozwfb1fzGiaCTMd2MQiQXDD7v
ST4SkADvZeea5KD7/Fr8+4jYRDYILwv12NKPhWU/728eXyCCRwpCZHl6b4HS
Ab4FgTNRkKjFGTS0RAQinwK26ltegAzz3sWJtTAo/Y7/89AqqldZ//Zvozv7
t9Cd/Vv006YhAlkRWOtU1fA47AMD898yY/fHgyrCrBwWgMk26b0MPi5Qg1bY
Abtvm7s10noefQK+GwQ/y1BLOH81JR27n8KNftIGorngbt69d0uL7WWOB0hX
sPtcWWwqvDCZDVpKt1uJPpaAezl9FLv/qwoVwun6b8H5T761QSEu4KyKMA32
fdn72NCMp/UFYFr8NrfvrA+gH/gugH2/DD21FP4Y1YCJJa/3x3XT4LJPFd3B
AGz/qc06e6ka+NSsTkrGpkBVC+jkH00Ex+kuuqFhBWifEwxvdU6CU9+CmtVS
Ub19n/Fk/8FKQF1P5i2omwBFb6WO3kH1mb9ryureWjl4cbTCJ044Fp7h9U+p
ySeCrSOMv3sLIOBSIP0utC8KFsyLHX0IUd7eNchIu5eCCWWdbeeGMGjx5l6M
Yz0RLMf/278V7ezfXu3s39STQzdRPQRbT9Kou4ne0HXTNxOrh7cauw4D1Wqg
xf39mtdlF2g6w1SE1c8tJ6+PqN6CzrR05f7blnCNRXvLBNVb4uvGOVSfgca9
cyWBvuNlkVkchlh9fu3HyHFnvRwYj7pKXVe3BMW24z+wes6+vMuUshACkeVG
XfLbLoAmitCF1X8DGaUzDUi/AVWUMOoXYMYs2x3rFyemF+OL1prB5Tc5zj6s
aTC+h+tkMjMRMKQEVT7+0QQa+06rEU+nQAY6mm27k0QQ4rX906u3EeSQtq8+
PpwEVfRCOTLF0D2UbvXrr2sAn0TlzUZ2oT54eXo3P5or1BQSdscXfAWCt7tb
FJdjoJOrwW1GHSIYZzHkacqsB6bjLzgneyPhSea6IS1TxC3r4gIi64DULYrK
NscweP/rksl3OyKoTv+3f6vd2b8d3Nm/ZZOft3/zuxlEki3En3zvDX+zPs4o
RnPI/rWjN0rnmoCbBEMHxaYzHHiucRzr+120bxvQnACEvCQkIxgtYeJ+iWxs
Tsi391bq/9oAbBIGua2rZ8vuWWpOYHNFv/vqQ+rCryBf+Udo06YFcL5p9Bib
Q/Tu9R0pyKoHi4OjQbUMLmDh01VdbG65pulIt47054wY8KE5B6xKuTphc84F
1gBREfoOUOE0aa/SmAoFde5oiPkvALnEzQqviHbQWqruuJacjJ4LvlK1JC4A
6K/x5DZdO4g/6PaOLz0R7h1laWjJXgCHgxV4+5+2gTuKiW9MU+OhY7ntd7Gq
BTBSQmW7uqcNRCon2dQnxMAzE7Z1NN0LwGyckrs0qBWYXdWCPk8jYSbL5wXJ
Hwvg4tcCLhGaVqAhy3o+aOsplD8r97d7YwGI7uzfJHf2b7k7+zenaieydIYO
IB6yKXpGxxt+2wp5eSR4ARySe2nqH9UOQs40FO4JcYaPq1JFzqYsgJMcWTYU
9O2gKq8+Jv+DBazf5BTNzF0AzuyWgxzhbYDOg/e99PrPsggahv1eNQtg/toL
l8m9bUDdiHKtOsQCnG1/JV3Zs4D+fv1cOsGtIMtNymTzvTPI7kixMptZAMa5
3fWeSP9GcRRlYKQ3+Cb65pL15gIgJ+jFb852g8H+aRare6lw/+mCD5KDBPB3
l4ezgl03SCnifJWw9hyKnEv/Mb5MAF10H2ZZN7rABZr1o6H7EuG6zMpl0t0L
YIHq+2Mvjy7A3F51sos9Hp77O30wjnMBKES+b/Wg7AJKGfs4E3hjIIWOtV+6
6ALgId+MPxzcCSiaeC6RCkbCychXNMcuo7/vpX3xN+k6wcUGcfl7Zk/hbhZb
RgajBXBhZ/+msbN/o9nZv2X4POqsInSDefXBB4yLXtBlUuXoxAgBaIu5DD93
6AayXCuzVdTO0Lwllnn3GgFs36+moPrdBZbMGlqV+C1g7faA6eu9C+Cyjel3
Mq8u0CArsx66sFxmKrn/aslxpCchTCyRqgswfNMosKKxAOKSPtKy4gvg3rjh
ly6kn41J9FTyOWfwYNjipbj6Aohpy5MsQvopo47Vt4h4g67K/SxpSL9BZJ/S
skc/sB5d/01KkQqfHtasMDhMANfMrH58398PdLbmbN0uPIcuTWPvdURQ/unc
RY1T+gBzv9vwK7Nn8A7dvPLAFQKYuqfzxoqvDzhoMR9+FRIHOdiffZ2yIICv
NNz15KW9IINJYPr5u2gYeEHL3tGLAOa0n50UVu0FzUUe9e9rI6BxF1dqQAIB
xAR8tCPt6wFsZRMq6/mhUNOKp+RIDgEY7OzfZnf2bzk7+7f7aTEZ5D79QKsm
QfiyuxeMKd4oL2UngF/P/yx40PeDXu/S0x9sH8K6lesJCuIorodnxJO0PnCU
xTKsNNkccl0PPndViwBer0/RsfL3Ab0zU5GPJFfLtrWf1k9aEUAU/xEKubJe
cF5s4LWsnTkwlztesu5NAISDcQeo1HrBg0xtTZ7kh4CDW8sx9BkB/PykuGCB
9Le1sL9ha/ICpA3v7NKQ/mN7dj/f/W0IvIqoHFTiSoH8pPOEU5fnAWmI78CS
2RAw3eNsDO4lQW3XpANfLeYB17bXz9vbg8DazmwrOjsBhmpcoiLxnQe18Jqq
ftwgmBU6td9sLhZyaszSNSfPg0MfIu5O8A2Cu2UjHa0c0dCYMs2Xr2geXJWg
HyGpHQB2b+SvrFyJgLodalXHOuZBH3+AzGeDAeD7ZihtdDEE3mItk3w1Pw8u
7+zfBnb2b/47+7c4Q7rBy21DYKLmsug5Mi/os/GzR14D+fd6y1VoOQSUE7/e
u/zNCebmdv9xvTsP5mjWWN6SDoEab5bq9L9mUPLVNomi3zyY9JwS500YBNVL
3xtCZtbKBMqSRDJT50G/XO4BSf5BIFXzq6HlmxlQ4Xr5N+rLPJANHLg4hfTX
rLd8O/LXCWycE/t6sHMe1MipmZw0HABJR79z9F73Ai6+LYzHCPOAp7zE877V
KKgpzmJSP58M3wy96W62nwOFhb9ZdCRGgdE98aNsMagOP3UVeBA+B4ZyVeoo
9oyCqLnvukwL8fDN2/mQwndzQHdLJW6pcATIDajt0ZOOhaHDsqpZ9XMgiG1u
zFpvBARM0YGt4Ci4FunbJzw5B2hy3+9/vDEMSKSd84+0hcOckeJs0+05cOSw
UPPxhGGgl/G7+y17CLx24JmmCOs8GNvZv2nu7N/4d/ZvMXafSdmtR4Fsmql8
r4cnVJo6aJzhNAdE21/Q1l8cBVeCuo4OcDrBOcovD6cj54DeXbZ8kb2jYF0/
Plrtmhk0KM392PRhDnxUFYnp+zIC3toFfTlPslFGef+867WGOXA76KhIr/4I
ENO0UlI7ZgYIDwmqj6fmgNkf2w3rzWFwfuj5r96rToCui+G1LMk8UAqJiktE
+j02039o9HiCuRvlHC+QflKBfUn7GseAZMGdLUbp57BTdO/btuhZQN+45nEp
dQwcFXM7k1fwDC7IczPO58yC2h9ZMiqOY8Bcd9n+Hk88tLBJMSv6Ngs2Ls5J
M6qMAalHt3T1w2KgV28Tt9jcLDjOlzn+5ugY0C5aZgpfjISHyd3GzKjngHWu
UMSeZfR3dDCL5b4cDi3Yq/jlj8+BW6+ESiTqRkHKw+tDJvLBcM1QIu+b1Bwg
29m/Oe/s397v7N/03eQVa5vGQDQstd2z4gHNX87rm8TNgsMvY/3K08YAy+rG
KZYHjpDDMvztyU+zoMzm2oS30xiIsbkskJFhCqsGI3ift86Cq8mb5ftUx8BZ
h5veptEbZSeKT1iWz88CR+u6QFP2MVDWl+/g+sAUdCpNb4bTzAHLB5PvApB+
rbyuJyDDEZAU3PDcyzUHyp80Jbsg/VdhH4PfVU/gqT6SJgzmQGW049HTuydA
RNIR1U+KSdD2vq9fSN4MWH/J0tQ1MQ60Hrs0r3QlwGQmRlKethlQwvb4+VLJ
OIi7eaNV3CAORtGmJJMvzACHKsWhgZhx8Lv4KF/BQDTcb0pQSKadBaLmZUmR
98eBml9e/eNrkfA66fqbFZ5ZsC/q9CKz0jjoVI+Ulg0Ng7PXOQMo5WZBnD3v
ijX7OCg8dd3/vkkQZDHdndxycxac2tm/le/s34J39m9OXtIWF/dMgLmajZID
0+6wgzpFXb9gBgiaCxLUp8aBt96ytXiJA7ykvbzJ2zEDInIr286UjYP+jFFH
8p8m8CWvg0sRcQZwLL3l6YkdB5FZ+7TtizfKHmdWupHumQUs56hJr9iMg0RZ
7eCQEhNAXztRQXZyFuxS03KNQfqtUpn2fSA6gOvGalQlSL+zDalu5EYzNLYx
6dyP5mQG34fzXmhO7ts+1Oa31QwTp7yVfN56g7fJfCQpaP50vsBZxxJTB0dC
KcQ+DHkDntErnZZoDpRUveOWdnQcOAy7CrdsJcGITt0PggazQDmj6J4+xzjI
5DMTJE/1AEnSWwN5KD9pl7xsx1Eejo8XMtGNuIO6vWvWI/kzwEtVHt9P+rCS
TDIXugO70zL4fnJb8LruFlULVFbQeZJJlwbdyekJ2H9PV4u9C8fC6iAX7WNC
FOLWK4N+d2zQ87Wy9U+5iDpo1zwmVDuQDmMpvwSo3EfPNWxvM0LC62B065yM
VlAyvBFV3aDwAOmPFojjQvZrV9OaBZefQfkZ1ko6WyKg8MmJeY34eGEAV/uN
OKgBOMwrERfI10xki6yDpIycS2LVUdBZp+mTPprnS/zEslwRD9qzOG1zJhwe
D65/0Yd4LdXRj7WIixYl3Nk+GQgD9L3FAcpbk9XpL9uIO5w9RT6+7gUrGRms
ghGfmt9dyR1VByeEZCQEIxzh7G0NkTLETx3+WSOGeJaIxtzHCgP4d1dLUg/i
Z4uO1mL8ElPnn3cVBoC6ohnnhJq9uB/+P/cuC0Q4AvoeLdyPUYQZHve0OXnw
2LoXGHvKiMc98JWx8VkehC6BnGaaF9JgEF2aikIJEdAeb4SxuRAmXzS+vrwr
A5ZbHborXUwEdvcOzfp+gvBaI81u2q5k+HTpyin+UiKYiznHfD0fwgzqo6rc
5xOhbZIeCWkZEZA9SFHdXQBh6Ddxh63oOCioUfT1M+IBc4reLxFvHquzTVyJ
gsOveTyvoedT/UW6z6c+Q/ja47EQzbVwGCZ2iL0H8TeVXlMRiMuT/rycYBYI
l+wb0gF6Hoz1WqEdRfyAj5vPBJc39Cs4T/MU2xMWrnExFEL4+LR7F2mtI8y9
xXS5EvF3fEWCfIirR1x+yUZjCO2Mp20GEc+KdMX51xvLw8w0hmDlwg+c59zX
5cb8nODX+05S6wgcrZhxP5LXi/C4ivYrNCguUCGXwOOO5j6ewXQ2KBp2xJsF
gkfvy3Gd7+mUO7VGs2Gwadf496tp8JrE2G/zOSL4StbprDKSDTXWa5PEeDJg
tGxnyM1ZIrj5SaZbeiwb8rb4/OohS4GkV5Z+ac8TgeqL9w8ZxrNhzF2r9kjD
RKjuuc+Bl0AE35rkc5sRtyrUsN5VGAcXV0geTCF+klbA03oiG85/lOiSp4+G
1wb0J30XiKCcHAz/RDyI9CeXunU4bFt90LSLSASKUKhefzIbDvU3zxqEBEIJ
o9tcDojrkiiLv0E8/AKhcAh4w8P1+2aqEC9xUhMYQbyvh2H+zrQjvLh5/NAG
4madxPcbiMe3CXQpChnCh8b0Hw/+JAKrh0vvMO4neIBZTsgQe67FudaX97if
7FdP125PO4JGUR7cj+GLBTEsrkHlB4DiggGng3jcwtMPGjGd9Np0NkgnaNE2
xnXSnhuTm+MxltqY8z/ub5AGr2+92lD+jT7Xy/xtDcT/3IOK8FwGpPG9/VcK
+/dvGhVDnuzGUuyDmZxK9ClQ6UWo7oU/ROBhe7SA9JCx1Na5MVHBu4mQl4ac
gW6LCFr8pcdtOBD3Op/RWxUHxTJquBsRr/027td00ljqjPfdJ3KHo+Hrk7oB
d/8SgYrtIy8WAWOpbVkR8scO4fC3EqXoIuKxxGY+w1PGUnXjHsFMCYGQenjk
rME2ETyZU/AKRPZRLA8GVy55Q9u71ZbvEO99KWH6gdNYaumIW5HKoiO82639
YwxxCo09pWWIS2YY57TLGEKz05Sv/iDu7PBRpgT5P9dlMvZNxhA82kWFc0Wb
noq3iMf0eVQoLzqC5+56uJ/X70gEQxCfqLE3QXGBw6d6PO6VTHtPPaTnmrD/
AaQTyK1N4TqrH84IXx/NBlzBvPh9Nmzw2sDus3tYeJ/aSDa4yVD8DL/PUY5B
2H12XM0VkRvLBh4uMcvYfSY/FbWM3WfP2ls9TOPZQFY2vQ27z/RN2bbYfb7N
mUnfirjTQYIVdp8Jb9LuYff5hb/E2P2JbCBt+7gTu8/3KjfHsPvMrHdMehlx
poGC49h9TthP14DdZz93j1OGk9mg7rr5NHafHx0jOYbdE32GC4nvEN/mj/iM
3edbn99PY/cqnvpO5BjiYXk2S9h9HnxZxYjdw9Lyl/v+IG5OQ9WB3edgj9z3
2L2VTXuFcxeHlRVZdJ/Xb+fh3OkieRTmRwAs4vf556ca3M/VqeRnWNy2IS0p
/D6/yMXj8ly4cRbTacn88j52n6fkyXCd0T6tvxLzIJi+/MwYq8/8jesKWH0O
e9wwG5cLQdfqQy2sPh93sDHD6vPtB+KMfp8gyLZ3p8bqs25EFhdWnw1lTslq
50OQ0DWiiNXn41PZv0lQHX4QkuK0pwCC2Rfktlh95jq3vwarz8de33j/CvEf
lZ0PsPq8VPXoEVaf925fGD/9GQLySUYBrD5r89xjxeoz2UgZXRTiY1k5Klh9
Zv15NBmre3IBRiJjiIcRr3hh9fmlXiA5Vif9yF9qMBZCkC8s3o/V51NDFpew
unph1+mb5xBnSuZJxOrzqVnxu1gdPsa9B+esfB8asPrcIC2B86CZINxPZ+DZ
Yaw+15BY435I7HXwuLR2tVRYfVaaDsXj5n0uYsB0LmUntWP1+QgtI64z0npW
YzysDlxam57B5oovZPs8sbli/H+8/84ctOnJhexHUjYdutC8MW5Nu2qM5o3x
//Ee/eHyM+dDw+vAYInMRWwOsVhYqcLmkN8779EH77xHT5L77z16VWLBSe6I
OqD7frgWm0+8T6sWY/NJ28779Tk779d377xfT1EpceINsq+nGzmCzS3D+zVu
Y3NL8s5798s7791n7rx3L7W8euZwZB3IcA4nYvNM4b7N99g8I/I/3sfntP4g
8gjZO5wOm8DmnDve6ynYnLPd+O89fbWd9/Qpdt7Tb5b/KFOH7OVBqiE2/5hV
fBTE5h+a//H+/hNZWjWSqDpwY9CJFJuLMgukjLH5ZHnnvX6Tnff6N3be638e
k3eVB9lfn34oic1LVE/dzmFzDs//eN8/L7lZRxzZ01M+r8HmqE24EYPNS/d3
fgcgb+d3AOx3fgfg7mg8bk/ydQ/TezRfnaPbwu3r/8fvA9Cxe+J6dml/Ucbm
rvIob1yP+M7vBjzZ+d0AqZ3fDSjKXVLFPm/jBcZAbB7rOSKPf97c//F7Avmm
4fJYPid2z0z8PRkIeG9E4/k03vmdAeud3xk4uPM7AxeOGxnJ03cA04t/mxMj
UyFtcvfB6/4LILkh+UHegQ7w/fvZmJca6dBwebrT2m8B/AbfRmuRvYzkNbvO
V8/hz19rp3kCFoBBDsWPCwc7QBxFz4uzZ55Bjj/lDKOIPxI56piKuJmD3lHV
7FgoICvc5B24AEIIxk/WEFf/utYkLBgFi1XX1PYFLYA3eZZM0gwdwL/x3LUp
yzAozKwV5Y34i182PK6I09qevcRiEwAVH3EmjSDe8bY1Lwtx7mI1a0YHL2h5
fs6EO3gB+MTdKa3E+IU91h2LDnBqoXXuKuKd9AaybYh7Vhw24CfcgMGU0efu
Iu5V7YDzSququjOEGyDvdzjOtXhtcD9qgduP2hcdgKtRG+7nDlkHHjerhnaD
wcELFP5awOOWOLw+iem85unSccgmAFDd/paI6fwmZrDSatsNrvzWtpOWTYXq
wsKu6ssEIHUncOgM4krfJGKG19Jgo93+E/ZLBGC6K/qDiV03+FSnKLt16DkM
HyxcOLhCABc/qNL8QPzAj/Ei8fcJUDY4zKMK8RsP+P/q23cDvTvHmiRlYiEh
h/+k4S8CyJlQDy1FXPXb/CJdVyQkaXo1OYr4awPJvP0O3aD+5997jm1PoW9X
cI76KgH4rTy8p4l4WuQZqSfr/vD1dZaQF4hrrrV88Ua8Lmj18m12L/hEftX2
B+JX0pMTMhD/ODnpyRviAPdJed1hWCOAKiHFXZ8Qv27AG59pegP2D4fqnUbc
zecyzg+NCTGmmd4Aby7/4+ffZOB+9ip/jjsd4gB0m7xxP+wcEI+bXJw0dIvd
C9y12cLjku9btMF0ytrzN/iu+4OTfq+CMZ05xoe4jJL7wJf5W4LtbSnwo17W
rmJ1AhhNMOn58LwPbBec3T4Rg+aQT3e9CZcJ4IfilTDylD7Q9OCezwGXJDg6
3XTA4QoBOIUdYIxCnFoge4mBIwH+6r0ae0iDAEhhdw5dah8gyYBBE7Ux8CDg
jXqFuHl5gNFjxBNKn6v43ouEi8/rKLg0CeA9fRRXN+K1jG98/5x4CtvFDv0I
Qvz8cMyvI2l9wD0k+fdHB3+YcSfpwhBmz7TYcRVxlfWnu4UrPKHoTflNVi0C
WBDkLHuI+B4Nxg8n2BygBUs0tzziM6mheYGIE8rOBi1/04c9dg+LdRGXEH6K
c/1lf9af3/RBAZszzsv3C+J+bCa7G3jYHIB2XyTu59baOB531lI/UajCE5x0
UsXjfuiUX8d0skjJBCOdgGt0N67zL8n9keaYQXB0y0uT+0AKhOYD4vLP50G9
9bn/q+POo6n62jiAqyiS0oBoEhISTVLCzpiITKEoFYpQZiHzkHme56FCiqSk
xCZkyhASRaZQLq5IZex9Lqf1lrV+/37WWeec7tK9z/Ps796714G7eSjS5/Ol
4L2+v0ke8cNoVnhvqF1kB6Jx9z6R/CYO+z7eZjkG13sizmMbojrQe8dg977b
0VggpybMJ3EYuVrcbY0Cd2/ZFDQpGYEP1SpFr0saRj7rSZdWR3cgc+df5I65
ELyF7rqjG7jfkb0fjMBV6vivHTcPwCqv7Y73gl+fWiOWD67c+7bbb8ALBzIc
7RJIHka+fUXeZHCj/E79TG0XXP7kk6Yh+JH4jkKmmA4koz3IeSrFEie7b8wM
BN/NXfWOB7w+v5T1Jv85vNO2620K+PaSRfdRpq+z4j+HStZ3L3jS1cmF+5CN
aWUVUizRxON1C/fRZSpceG7qVNSvDG0XRC/bt/Bc4TsDiPKeXCEBtvCeqJfJ
+xPlPSdPq2zR1exCxjcvlyPZRDzkxauq10tC5fxy9tEaXUiFdSdj4otkHBq5
T+5xDwlFZ/IOr9fqQlnPuaroWOJw323BvOV9JLTja8mXR+A/PFaJJA9GYZWL
z68Gg0s3SzGInu1C51TquOgKwrGUzmOTNZ9JyIWXRjMPXEKwJFzeOwQnmwtj
G/BAUd0y5nNdaDDB5vC7R/6Y22pQpwH8RGnL6SvgH0x7Ij8pe+Gczg9SzP0k
lHrjxXQKeMiBuS/2Pc4487KVhQK4yfnsV9Xgk5bL22bYLTHHl9uD18EPd0/e
6wTXvnF95qLrWWzMgFJdwPW55hc8NJ6v6rzrWcRgI7bgc09LF+7TdKj+9zS7
JXKv9li4j4tT6cJz7d0+bILnoif7bBaeuzqiWZXynmeddu+H90QB9rQL73nc
6uzBum/dqHautzbcKgHvu3+tRWYnCdUbp7tcBZ9SPvqzUjYZc4nsqEplJ6GK
s3ElPOPdKN22KVhfOxazDYfEt8H1xxSzuO3Bz0QHtlJLRmGjq+e3aXOQ0EDz
M71ScH0sLuDAE46P9G9RrwPPXnnAZh78O8MEf93aELyLxURckJOEvviP6Oyf
6Eb5pDVNVEN+mNeO94MLeL1HK/M58DDR218P5XviDyfidr0C9+ejSrsJPvvQ
It+d2hnfTjfaMQHe01xPFQAe97sozCDeAmfPer7eyEVCez1bBaPAY2Uvq0Q1
auF5LMbGBf47rX3BvUe4OMMbtZDgbdEFZypoWbgPnYlBqX68BUoP8li4z63K
lQvPjU3n/uRG7YwmLy8+967S5c2U99x6ldsN3hOlH8/korynZ7mkwe9tvYh3
8I7igaR43L6fZ6xQZwjdMTHv1N7eiyyOSF83iY/BBrdtIiXPDyGhOwMbs8G1
TIuoHGIi8WHGSMUX4H6HpFb9AHdTeb1FLzIMJzn82MB5YQhNyH55enBHLzpY
v62HNywY/xxN/nwLfHRzxPar4I9N0t5l7PDDZlENJZXgj5/ePB4Mntgelt+w
2RNLlHy6u0J3COEEH7Yc8JIdB3Xucjph/Z2vQveBx1ZJPygDZ4t+/tWWyQK/
UXfzUgK35FacrANXtRHyyN6qhaNKHV3Og08niS54iWi3UdZWLeTa5LPggSIn
F+7zSFdjG9wH6di6LtxnzZOAheeajA0H3OF0QorLyhaeq2S5giTO3ou6Nuuc
urHZE/WsLk/wg/ef1A+Tcw2uxFdzD2YUzyTioyXrwvmgX6jI2h/GHVKJ50Yc
RrL04/AbJWnuX+BObodq8sCNHpO3nqmLwikeTXceQP3fqSgxyBNaiR+GHq59
JRSOZzrCV8tB3R5Wc3DAE9xD6WfoXEIwHhmnUasBZybyjbuIfOMpIt9IF7KS
el9YJV7jwmjuoWmLRQN7MwvAz5SNGCiDL2+8X3h/5BK2YHyR3QL+QMozRQu8
bW3fhk/pZ9Bq2XFfSv3cej75iRw4XQFDFq6xRAJFF8VLKfPPX9lJ7OC6zrSy
j5hc0ajtzeoQypxZ9Mz7sfBKvH7PmNRGaahvGVJc9oHLn5EjyzzF2L3Vkd1s
SzyWjnyxoQH63AcnRqq48zHmoBr4fcEhGlvWvSn1g3420MJa6z34yFN1dYaP
4TjpkM5zAehbC/xFQjWfYXyN8RHJXSQEy1XZfH8G3n11MX8oSeQPy4j8ocv6
q4q64AwxO7d4FhjgyuUo6D14JWv9Ml9w7oYT986JKSLVW7QOneAvf51T9gC3
GDGYTtljgah9HBOqwa8oMQspgQ/92EyDNV2QbvanH3HgYx/nng3C+/D2bNwQ
GHMbFbDM3VYHP557jW2wNwev14m/t54pBrNEWKSnjpARySdHp7MvB9ec0swz
uhGB3/7KLlAYhfdkdM2z+JyDp188M/SsDsFPhVhufwCXSVrM9e0yWsz13SFy
fcmBzV0+/Tl45XGmewU2YuhuI81xZnDNS3pfX4MPBx0TGzQzQ+aWG07RgO/d
4NObCv5hxa8DGqud0cMY1lUfyGT0Kl+waRv441gO7pq3XojZ7qV5OHjFql31
l7dXFeM6w/ztYxHYbTQqa/s8GfnJ6aM1803F4x7366zkQrF4nNiTXHCP/cOV
lPybiFLGWUr+bYbIv9E/fD/YX9xUbJ5IhxUlTFFbkW/yOPjmblvtqoftxZxx
LNWnJRzRwc/UbjXgquJeQs/vthSrnLv5bmjMEzVO1N65DT5G5NN8luTTJld0
iqiAGydkTu5/GoqFqLnnnoN7FS/mwWhKFvNgnEQerGCj31FF8NEVWVdltR3Q
N1emd1/g31s5xqaxCrzmeWMjmvZAbcqHijLBpbYv5rKYiFzWUyKXlfB9Me9k
+H0x77SCyDuxSmmm3nuG0Zkvcr5vvrmjoUabe47gPcRcwm/JXGKamCcELpkn
/JkbPCXmBu+JucGf+cCPJfOBP3MAb2IOIErMAf70+ypL+v0/fb33kr7+T/9u
tKR/30X06WNL+nRToh9vX9KP/+m7q5f03UeI/tphSX/9p4+WXNJHS6ou5prM
uhdzTSQi1/Snj766pI/OWP/wRh70xWP1tVck2RKxnbSDJQP0v+4dEeZc0OfK
HPiUn5EQi8172hlrwRXllI75gP9SGW9vYI/Cs49WcppDX9yZF1fTA/4h7EYv
TgvDVPel7v4G336eZZsA9JVvqaY/u3AH48PSfmE20FemEDmlYb/FnFIVkVNi
vrmz8jklv6Qlc56zwAaTPx9GyuD3UhPlKsCNw7Y4Xna/hONKtopQ+lwNqUO3
y8FL8nQmrZvVkcRX0ajr4L8UStyegXeoNRoZ7rFE73K1NM6B5/0wPZYIvvWi
bMxgsAvST3lvKwBe/+Bo3k1w8W8rnv3yu43EtvjNDsF7GnA3PngFfStrYBrd
N79Y/HNZ+I8Y6FsDrXqvHIT+9PcYmx8dfA6N9JZ6ItCfvmfMuhMFjouOdw3l
hWEZdR++cvBP4Z/1yODk9MjG+BPBWOZ20wlh6Ps8ibxQKOdiXkiXyAtZbZvh
zwC/e11V79J9fSyvnR/GAz63d9fkXXDXdR1W8sPyqOnZWx1B8N2hx4WjwI0l
+4blGc1RJr+OxQ7wXVoCEw7gn/s16CZfOaHTJd4tv+C5gnyufOrgLt4k6Sci
XqhKrN+9EHwium9nJ/SPKukvSJEMUVhobK++NfSJn1lpWeWhH8x9amSt9CQM
J96S754CP3nrBtt98BYr3u7Wc8H4h+HlF4bQZ213WczhBLEs5nBYiRyOXN6n
fldw9U7tW1TORxF1JY36eXCnpJlj5uDGZR6bk+dNkRXmqVMBd04qC6P0d1RJ
yUFpV26hT3yjsfvAd3+KGuUB/86ScH1gwAN1GKYVTcFz437rFtRB//V277Z2
k3thOFmip00B+inXzLjQg9CndL9MN5C5FIzPtypw5INvcV3Mq8izLuZVuIi8
Su0NAzpW8GGBggGtWSM0pmz7Ix5c6rSd6BTcZ8yyVwBtskdVy3sEXMHxBt6W
WnD9iKPirBHuSK9ttksZPJDIk7gTeZIfRJ7kxPuyplZw1HJU/qhOMFb6fuVc
LHgMkd+gVVvMb3wi8hsvWQWm8sE3JfPqpL+1Rc+rJosMwK3K7pjfBp9vlttD
d9INPTvL0XcM3JzIUZwhchQGRI7Ci8gnSD9ZzCeQny7mE8wbvquZgU+xft2U
RuOK/Mo1677C9ZsF+kZ0oe562Du87H5qKvbxYz5pfJ2Mrh9bXDe/E7i4br6F
WDenY9C7Nwj1DK/cNschHh90PKAydxd4WpBphTrUvbEvNsdulUzCEsbPE0q1
h5A0sc7uTKyz+xPr7KIcvvtPgGeWhucJpyTha+ONEdlwvTGx/l4ruLj+7kGs
v2dN9ehJgQsH7y6cO+uBbFtu9YeAFxH7cXyI/TjixH4cuUf2ZTVQB2YmR2/e
usYXz789Y38Q3vMFdd1+9jyMe2+ojp97mIL1NDvGVr0ko15iv4kHsd+EROw3
UR6QNUuHeub4tDlf1EE/vH1X8/XdlHVSq1zru+ABpj2r6r6541k+zizK75rb
UT4d4a4c/KArpOvQ8lRM5/YgjpZERp9k1u473J2D357OaK0STMYDQy0Wy4bJ
aJzYZzGzZJ9FTX8YYzrUOf2BdEEfZf1xe9p3htPw+7uMV3CcGnz4o6z88WkP
vOlSKKb8LttVHWiTB9f65qhzQtsBtz61eE/5Ha8Z55+pCvsoXkqr/XObbCo+
rK71jnIORn264/EuxW5xxrBWrzqLZOySU+5eMUNGa6eSTNRy28VHzOSMcsUT
sDp/ZVDGLDyXqnJhP0INsR+hkdiPkJs2aFRBri12s1Cm3S0RgNnytWj5oD4R
btq0Nmi8RTxrIPY0acwTn896vVC39K683n9hul38y+DlUmUJR1wkt2yhzvFC
DI3+9M3ir6jTk05LmGLOGe+FuijA8BWzV3cOyvY9s7fXNhXLyzKvKx8iI97u
J2zlPTnoUBttgOPdZMyfUKNTBp+z4FFZhZTeHFS/VuHIwN0E/Jpmu20GfJ5Z
35sCt0FdlCGokBdIFYunYlm0LKH+nAqKTi8HP1dfvE9zeyBWqOqcPwSfW2u+
8EH2/hxU5Po2AepALNqtcYNSB/b/spW+C64ya8apudoZf379hJpSN+ZutJWv
Bn+b2yT0xcwM7+R8dJJSZ9Zt2SPhD440qhorbcSw/Oq7YpS6VNkxqGhvHkaJ
pbVKfZGpWCTaQc6tkIykyRl88k8wCvLK5D9YmYzLJX6JuMDfoaKvuNbhpxhh
nt3aBaMJePiQs5s+9Atx1zqOjINXJfwyqlCKxdTxq1gFoV+YtZwvd4Q6rY5d
4UxkdiR+e1Jgqgt8rfM7j31Qj/FsZWA49jEQW/S2NE1A/XZU4HH3F/AA0XIf
qNtx77cz7pS6XUms5OJpqOs6v7U4Qp2PS8/vHafU+WZr7jt4gkdeXjmauscC
N2g0RFP6AsM2x71+4PnN2VyXxRQxv885G0ofQesUd/Mi+K2v0oLuBQboUUm4
L6XvaNj/rlQtqBJ51gzNcaWl4rzJ5CB3+P6Rc9r7enNwJQo03k3dAfUhh9B3
H0f4f31tP/PLCvACQ2Pm95sT8bub6+0vQP+IVzTHnwupRCI+vPk5rrFYRWfo
LDf0j99/3NZ7D17aucxRfigS72XYxPUOnDROzSAKdVTjMi+aR6ph+JdTTfM1
6B+Zri3m3jcQuXcTIvfOodE22Q3emVqo3CHjjStuuHOfhO8TzkbV/TvDKtHe
ay9fQt+HGatTXlH6Pu17irInwZUrk2JLaiyxqZyfMKVPVK/mP3gWXCjrYWdP
+hnsXbPdg9JXbvCO/Al9KFqxmq4xY+QSYjnxJZ3Sh5rbO0VA34qyRj2d3TVt
0eDrTWmUvnU7kWNvJHLsh4kcu0N/0L7rUOfckDLtElL1wb+vuA29gzonIDZt
Os+8FUmWCOx3y03GqwI985gnRhCJyGPnE3lsESKP/fmoZooI1A/kvWsVlPJ9
cG8hV0EY1A/6F2iPOINvdYupY+l0w2zB1BfbwMmr77EIJLajQmv/J0z+yVig
+/BaE6URNCqkVfQO3HGdbo4HTsDflO1W7j0NdQiRQ+Ykcsh6RA7ZfI8W5xzU
G50lxw7eWO6Lb92XI5fC7/7pIQkbBagHTK2s9nQpuePeHJvsFVAnaGjQpViD
PzhsyhJz2A4H1Qs3HQJXcySLOUZ0IPdOsbZYnWRcUSi+rzd+GDV029cciuxA
BsVNZ+qsEvBuYz3fqIRhRP1oXWMz+MWMTRX79sXiVvq8PccSh1EZkdcdIfK6
HEReV1J3oNUP6gFW7W3OI8K+mGHT4SF6qAecJ42KP4Gv6j8wP/fAHfdzerAr
gBc8ONHMCPWG+qSIO720Pd5cNBRnD/54Ml6FD/xDQov5tPY1LDC2RSkaPFRJ
Y2pUowvRr7GpyOdKxndzv2iO95AQ9ZSRWK5mF2KvMZ7RZEvAOqmB6+N7SWg4
6I6qjlYXWhaaErWOFIOHO5PXC/WR0LEWeqExcFFb/S2xhZHYiSR0pgjczCrV
+QDUFacELwomavni9SmksGGoTz7nDMV7UeaQrq0sDr/c8eDElRReqDcqbwr1
FoHvq7P4GbjPAc/d32unCb7s18ovlPnnhYck9ZXdJliG1cXbCjyDzj57ANz4
+5Xb8T9EcOhYYz1lLlrJ/YXK81s3YpcRYt70Jgk7KrG+qGaHOsfQ4vpX8Me9
Urdo8+KxvG32WsOdJDQegOslx7sRQ6X7h9qYGJzsNv/wB/jte5rsIeCN9jtC
9Vwi8Zo02ghrDhK6lOJ7qQU8K/A5zbsrYTjtvF7pZ/DVdEy3jkH9Mz3DfOzB
FV9sFHmxNBTqnyOV0wIG4BGXz7SUH/DAh7iYh+rAqYWGLdzAabxunveZc8D6
joY80+Bu+wNTwsE5mRO+FPPdwE7sr9OYob5KS4t/EQeOqbSy1xidxOwMedqc
4D5v5Iopc0v5VwJ8QjaXEUmj6zQ7+DEdjmQGqH8i3lL7pEnEYzdGav1aqIvU
kzs5jMD3fd7u+148Bgep8dMqnx9CD2YDVr0AF3xWk9tzLBLL1fTMVIDTHx0+
RbWjFx1awbC88kgYTm1+ILoX6qLNAje/HQPfUDrv5S8UjJfZZlR5gicS+c9I
Iv/JROQ/19eEvY8Ad+1+e8nvvAdG2xqX0emCv6FneQL++anJxXUPb+ENV5Qf
HAQnS/E+rgQPtLac+ZBohhUSM+NPgxc8S85oBH8RuF1UWFIV31FQadIBp722
f7oe/DStg8W6n+fRYxouRW1wxUqh9FfgHi/9x2j8LRH7z2UMCuBM65/4mQZX
4uuvj0tWX0/CYpsnJ9bC9/zP01FaK6Dek0iKkXgnH48tFAXbXoM3SweqeoKv
X7WbN5s7Bt+nWZNgDN/zBo0JVhPg5J3RhmeXR2ITh2NoDnxSVK9QEerDs2uR
RUdnKF5/uKTQAb7nRd92coWDD2f+srCzCMKHN46vG/xrrmi1ZK6o6GvBzx9W
iakuzD1R47LD4y4yCnngo9cCp0+BR/CoKa3faYTfZU98bQCvO8E4AN//WE3l
E5NqSY14a0yXVjv4wFXVEVXw8nu3VpgLGKHjM0NRlOt3qEkyUnKSNdtvfVy+
xw5t5VNIfwzuy97xTfApxhZvw0uyguJx/5E99k+hHji7Q2wtFSWX+LhamKQX
g7WCtXIvwO++sbgDx13wL9diumeEI/Hs1QG17+AT87ZcOyh5xVMF8n30YXj/
0YoL0JWja7lj666D3zk6v1YJB+F0XqGGz3/NFZeV/TtXlL2l+FMHnLE6wstO
2wgXXLAaaAG3laWNo8wVhQTbGc3dmsSddtIpfwJvjB/eFgCewhs5MW1qhIxY
jrNQrtejl3HUp9z/TOQtKSM7NCCuLZoPLneF/JIRfGyvPE82gzvauGoIe4CX
X3x5p52SJ5T09RvxicEBI3T+flDX2TJLUr3uy8HqhXmswmcj8TfdFUWU+dja
je9/q0OdbOltkKbBE4brxvy/pIPv7giK9AJntjjxLG00CD/ya6HfTP7/vLH3
2r/zxvT7Wwsp80bUf2Ufh8EbcV5vLxtKXXfTXXJ/DfipvbqinKFG6BV/+BQ9
uN/elXwPwS0Sgg45B9qhYHszkxG4v//xC5kHwOnORZ3s4nVHTi9fNLwAv7qy
J8K0r6a4IsV/aLlBJP6F5UxWz5PRc96fIlPK74pnruRyqx0Iw533ba2DwOVW
0H/8WNVYfCFyVnFuPgibc/OtoYL6OVVocQ75Zx/unznkButUkxs2TcXkH9yu
vjFGyNg2+tUk+BaW3gj1+23FpipynpYxdmjLk9jV78GVwy28V1o3FRunnXWY
OuCO/E5lt6X9NYdcuk/Wte15+iHwU+XiW714w/D3jXMfMsDJNJObIsE5H1V7
NpODcBX1yq+Uz/nPfPLPftU/88nKDokDWuDtd2RUyn3s0Asu5sZRuN7Hwatr
N/gkk9bMIx53RCvj1F/413ySc8l8Mq7SWWwb1LdOU7vNkkqD8MRFxpH+v+aW
Byf+nVv6eu+1yYPrX6/nr79A745S22rlvcCv/8c5aXb/cU5a2H+ckxZAnJO2
izgnLZQ4Jy30P85JM/uPc9L+1KuiS+rV1f9xfhrtf5yfJkCcn6ZEnJ92iDg/
7TRxfpoucX7aGeL8tG//cX4aC3F+2rLjnQvnp20jzk8b+4/z0xqI89NoifPT
Wojz0/7MObO6/p1z1hLnqrUS56q5EueqtQYbK6ZBPXzv+hspL59EnMLUofUd
6uG5R3L3Vm1sRrs9C3Mkb8Xh2YBWyUTvUbTms4yEHnho1PmzDdejsdnzp6sP
+4wiBekD2/LBP7ZEW++/FIGldRUfFoKzbA44QgV1NYk0cey6WijmMuveLQh1
tfCFqBAJ8LZw52omv0AcU7/9ZvBf808h/3/nn+v1ctPywTnOcmtXWd/EmSwz
2grgdrt1nSh5HgVN2h1b7Q0xWfJk9xXw7VYToZS5aCLNWka66cbiZVb1B83A
iycdejD4pamuPA4jQ/RC9ozGVUrO52KLUS74p3CPmFOmN9HJ1xvlToFnVP7c
Ewte/GMXP1nVDSU7J9LtAK8qbqR/DPV/Z0Xb/le/YvGHA59fe3wfge+fOnZm
y1Z0f+fDvpdTUZix2ZuZaXIErZjIyjcHHygKrg6cDsccm2xawsB3MLC/KQcv
e642LToTgoVH6OapKP3CLzFdSp7nnPfpHTE/A/Dwnp0hOn/NRY9y/TsX7dW/
ZnEPfCNj8Z636w3xSuFdOtzgyvdOOlP89/6CGynkvuJ7gabU+8BFeEJpEsGF
/N3HJ75eRe+ucjJS5qjd27hoAsAPz2leapuwRU5H7JzXgtPUVzlagt8+4+J5
YsoVUeuuUuuD93F75kJ6A/3Ia71TUZm2UfiH763PesojyHD0GIMA9COemjf0
3b3D8TXvvuiP4OjkzTgv8GZDH4FjMSGY9muyviT0KX3ytuGUXA3391f1WWoB
ODouRyb6r3npOtZ/56WWxzIY3MBvf3LdE5E9VmxTEWVLmZeSUv3JlL6G3Zys
uErnKpIo8m3QAH+7SVr4Eni75AW+Oya2yMbJSxiBlwtnfJai5HBC1eKDIlzR
9vesj5jBfRud04uhf6GukM7wYQjH2Y2bC8WShlGGtjUbG/QpvyqKlgUIhmBf
9ZWSieDiKsapJuDDMkNPvqb6Y4ay9rTRv+ao98n/zlF1DkbqbQHXUeNXW152
BV198Xp7Enjj4LKE5eBh64fZOz7YoDU2HJ0+4JG6PAPdcH/uN7z7VvO5omYy
v4X+X3PU20vmqHSTzRbV4DN5d7KPlQRjd+9bMkHgB12lordCfyGpzXCx5Isf
nmJUNfrw13x1v8q/81Ube7lHhZS+hip82FHCBpUtTw03Au8ZsX8eAX7JrIT6
Y4ELqj7iFnLir/nqxSXzVbbfe1uEwH9yRuxQ5/HDv8qOa/n+NXeVzft37mo3
qtBnCd5yNOP2pJQLkk9xoyLD9X/q8CdL6vBKYt+NzZJ9N4rHYtYp5mFscz53
S5tlCkaCtzfs/mtuab1kbplF7DdxX7LfpJCNV/4x+MURNQVdenecT7I+Tfld
k4+Ze3evKwc3BOzpXRGYgoUTOAflSPA7+Nz7jmF3Dr4mmsqhQ0rCA54b3bb/
Nbdcej7Mn/0X2z7+u//CtUHNcRe43qoQ61wedyxK83GQ8ntd9r268Qy4KN8n
mQofO8yQa9lE+X3nmKzMktBvEfedHp4cjUzBAoOB6/hmyGgbyfmSgVSH+KPZ
1yYzM0k49yFvKdUsGT2LX8khUvxePPhiSG9HdTwW+xm4tuyvuWX1krnln/0L
q/r+3b+QPOmYXF7aJH7Dr2sC6hx84WXmQp3Twv1DiPSjTZz82sTRKsYOH/KL
WqiLqgRVz20oaxK3fxKv5x9jhE8PRS7UURkiDjsbu3MQ3zv3V0rweTIEMkac
gM/zbQWX4o+eHPSMtrrFezgJT4y8ztwKn1vl8a8HcG8Oolr/s+HIy3gsqyxc
3gnOqbGhkA/qpcfT3Vx5fjF4YrdGt+/I//cFrNL4d1+AcL0hvVB/Dny/3yiF
ehKbzKrXUerJN/bCfjngl4tl97gE2uHlP9dco9SfUq8iQ9+ALzPr2rUr1Agf
3HTgJ6VePXhTfStlbikXyMFbYvKmmImV24pS317VePmtIA8jesvZhmtWKfj1
2/INu+Dv7VyMEW3OE4yGSr4NehQlYW05rcM/wBnkbLfZP8WoR0GaZjokHt9d
O/cmD/qUm9Tyu9igThuuX+spciUGL+N+13Qe+pHp1SOsQeCbNGt/KIhEYpyj
Kk3pU5YR+fyd9xbz+VuIfL7EObYv66F+y2HxSYa+AEuziBRS+oKM7twMA/AO
2fnr0kZ2+HRRljClj1B9aXwyEHwiXKp11tQIhzSGbKD0HTY0Ma8pc8tTs0Ib
RLyailk36yhQ+hSX3BCOC+A6wlKxttpGSIi5podyfe9dtt8fgyoR9c+eHSzy
KVjJP/SC5A2o93xqc52DK9GX4Wx3S7MkrM9fnMMA/WmIzZ3QdSGViPtS/U6X
U/H4np1rfwW4Z+SreD/wimE+n7M8MdhJg3P2GvSn80cL30DfithyU/loqCPx
GzfxsVnwmw3h7HJQFyWVu9307grFDQKviil9az2RV/dYkleXmerroQurRLut
mzepdLlhU9s8FzfwXvvBFOgr0WG7ipoVe+xwjLV1MqWvZPehclYDf9WR3G8h
YITdzzCHUPrQDScLbM+Bf5o9dWessqZYEq9RpfStZ3l4/BXBt9ZxGazbaYSk
aTn7KNd/Ik8W8VPy4WIby1S57NBpQ1vpvL/mlmVL5pbpRI5abkmOeuTzRvcK
81ZEwz9h2WuXjJVbBoQP/DW3TFsyt/yTE+5akhOWqkun8QD3rX2xX2LeFffs
MVndDU71OTJEI7Ed0c6WcyrtgPeZOPw+SWkEsdHz034Br5XPuVugmoCLS9tv
SP81t2RdMrc8TORmXyzJzcomhb3VAPfKbffYGueKmd/Qam2A3+XBlbPn7MAL
xRljOt1s8ezLwcyj4Pam9GolER2oJ2jjKT6HJHzxFtMdvoRhxHTlCDof2YF2
PzkdX5gcjx3UdMTLwDt2s33pB59o88vgfB2DX2rmFSj9NbckLZlbmhK5U78l
uVMb60Pj38CvUt1Zu3yfK47lmfmhCz7DPqpFWSctv1LjVDpug49m7OlzBzdV
em7GDx5U5Pnh5eqrWLH5SFos+Dj97/tKml0oJq5Y+eTDRGxz1LhaoZeE/DTf
HB4H39zy2Ye/Pw47dZTUtYE3htewuWt1ocuTq+S+bo3Bzflcamf7SOjuSn31
ZfC77xPGs9JdPRJfqXisWQcuR+Q5N15fzHM+IvKcQSzMTqngtoYTfZuxCz6l
wIWlwDnaNKdqwVMrfAPsz9lg3knRXH3wTqa5kl5wrtOPxuVNr2CWgkxWO/Ab
teveUeaWUQ4RFyJKxoslAn7/pMwtE9OYzMu+dSPrDxcSnNsSsIBZf9K+nSTU
Kp2RzTzejdxk1LjlOOOwpNGh1MfgNqKbjlwCL71p2DdsGo3VG3bV8XCQkH2Q
zJo08C1H+XabF0RgLDy2PQz8bK0QXwe4WvmcbNvyMNygNB/xDbyOyFXWLslV
2iqM3LcF79whtPGsvAt+pdt+ZRg819LS0x882UvH9u1La/ykLa9yNdQhWo5b
7kWDl0aNqNyvNsAq8y9PbANvcny1Jh5cXXmYrBLxtfjopvsDlLmlVVfU80jw
GT+yjmukAaJJF7mzHfzqV49oyrptCKa6QTofi4Opx1rYzw8htysZz0PB82sf
zFcXRuEv3r7qAeDGBhtT3oFXa1o7+bJG4LMSDZmj4PU7PigyQv2zM5V78z7b
UHx4z6lmaah//BlYsCR4psHIqENmEKZ5WtEQ9FcesnlJHvI9p+LAA3CBM92y
VOnOuGCd0m8+8F8fDymVgldb1jwT2WqNJ+c5eE6AK3wn21Jyj2rabF/yOQww
ffvEDi3wsq2yem/BxSy23J982V68/Kf/ACUPGdYgxki5nsT21Wqa1gDlrq11
oFyf92adcwl4IYfDifPrrFGWaVoX5f4vifVoxyXr0SbEenp7wL/r6X/Wx82I
9fEAYn38zzq4L7EP3ZNYB/8f4CIDpA==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{336.06603783489084`, 141.01653761919493`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.231941171102637, -3.1319679486268828`, 0.3508528462421165},
  ViewVertical->{0.03795392134720476, 0.0964903746806015, 
   0.9946100278241554}]], "Output",
 CellChangeTimes->{3.7761057600876226`*^9, 3.7761616138468013`*^9, 
  3.7761826695263805`*^9, 3.776501164229405*^9, 3.7765013841447415`*^9, 
  3.7765015199005427`*^9, 3.7765021558334785`*^9, 3.77650364968442*^9, 
  3.7765082390778074`*^9, 3.7765083443453145`*^9, 3.776508416493411*^9, 
  3.776508446748663*^9, 3.776508478349762*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"cae2c902-951c-4355-82b1-19a2f54b8071"]
}, Open  ]],

Cell["\<\
There are no obvious local optimal points. We then check the four corners of \
the answer space (.95,0), (.95,1), (1,0), and (1,1).\
\>", "Subsubitem",
 CellChangeTimes->{{3.776508515014763*^9, 
  3.7765086060781813`*^9}},ExpressionUUID->"cf1a165b-5c1c-4282-9419-\
e18af1239519"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"error", "[", 
  RowBox[{".95", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"error", "[", 
  RowBox[{".95", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"error", "[", 
  RowBox[{"1", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"error", "[", 
  RowBox[{"1", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7765021599583597`*^9, 3.7765021630676365`*^9}, {
  3.776502289558532*^9, 3.776502293199051*^9}, {3.7765086119685726`*^9, 
  3.7765086349396887`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"fd2defff-fb53-4091-ba29-da53cc3553e5"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.7765021644269304`*^9, 3.7765022942927394`*^9, 
  3.7765036497156687`*^9, 3.776508241999584*^9, 3.776508636517727*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"bf4f0d80-37b0-409d-82fb-60f69bd84612"],

Cell[BoxData["0.03750000000000003`"], "Output",
 CellChangeTimes->{3.7765021644269304`*^9, 3.7765022942927394`*^9, 
  3.7765036497156687`*^9, 3.776508241999584*^9, 3.776508636517727*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"119fa6ae-ef8a-48bc-acb4-97d6a19ad0d8"],

Cell[BoxData["0.012500000000000011`"], "Output",
 CellChangeTimes->{3.7765021644269304`*^9, 3.7765022942927394`*^9, 
  3.7765036497156687`*^9, 3.776508241999584*^9, 3.77650863653335*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"84240a8e-2c9e-42c9-928b-ce679ce9cc90"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.7765021644269304`*^9, 3.7765022942927394`*^9, 
  3.7765036497156687`*^9, 3.776508241999584*^9, 3.77650863653335*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"aaf24451-7a35-4aa9-b57b-86620bb23d29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error is minimized in two cases:", "Subsubitem",
 CellChangeTimes->{{3.7761057873087068`*^9, 3.776105803230027*^9}, {
  3.7761616898537955`*^9, 3.7761617328347034`*^9}, {3.7765021763248744`*^9, 
  3.7765022019990025`*^9}, {3.776502244832512*^9, 3.7765022541446857`*^9}, {
  3.7765082844271793`*^9, 3.7765083190889373`*^9}, {3.776508777147475*^9, 
  3.776508781522289*^9}},ExpressionUUID->"632266dd-c079-4c23-bdd7-\
25a8da03b2af"],

Cell["\<\
\tThe decision boundary is .95 and we assume everyone has the disease.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7761057873087068`*^9, 3.776105803230027*^9}, {
  3.7761616898537955`*^9, 3.7761617328347034`*^9}, {3.7765021763248744`*^9, 
  3.7765022019990025`*^9}, {3.776502244832512*^9, 3.7765022541446857`*^9}, {
  3.7765082844271793`*^9, 3.7765083190889373`*^9}, {3.776508777147475*^9, 
  3.776508838532861*^9}},ExpressionUUID->"0db03697-69a6-432f-baf5-\
4b6b6665538f"],

Cell["\<\
\tThe decision boundary is 1 and we assume no one has the disease. \
\>", "Subsubitem",
 CellChangeTimes->{{3.7761057873087068`*^9, 3.776105803230027*^9}, {
  3.7761616898537955`*^9, 3.7761617328347034`*^9}, {3.7765021763248744`*^9, 
  3.7765022019990025`*^9}, {3.776502244832512*^9, 3.7765022541446857`*^9}, {
  3.7765082844271793`*^9, 3.7765083190889373`*^9}, {3.776508777147475*^9, 
  3.7765088651914177`*^9}},ExpressionUUID->"f823c08a-c410-49fa-91d0-\
091dcd37b383"],

Cell["\<\
Both of these cases require the ignorance of reality to achieve 0% chance of \
error. We know that there are both people with and without the disease, but, \
in order to achieve 0% error, we assume the prior probability of the \
classification that results in error is in effect 0.0.\
\>", "Subsubitem",
 CellChangeTimes->{{3.7761057873087068`*^9, 3.776105803230027*^9}, {
  3.7761616898537955`*^9, 3.7761617328347034`*^9}, {3.7765021763248744`*^9, 
  3.7765022019990025`*^9}, {3.776502244832512*^9, 3.7765022541446857`*^9}, {
  3.7765082844271793`*^9, 3.7765083190889373`*^9}, {3.776508777147475*^9, 
  3.776509008338744*^9}},ExpressionUUID->"4faea69d-84ae-4aba-96de-\
9f9cee176d0b"]
}, Open  ]]
},
WindowSize->{1350, 686},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 299, 6, 49, "Input",ExpressionUUID->"a6b9d518-61b5-43d1-9741-cc10bdc3e5b9"],
Cell[CellGroupData[{
Cell[882, 30, 155, 3, 34, "Item",ExpressionUUID->"5e683786-21e0-41fb-a4a9-842a055f327b"],
Cell[CellGroupData[{
Cell[1062, 37, 151, 3, 33, "Subitem",ExpressionUUID->"2cbc9ae7-84f0-4360-be3e-728b33cea420"],
Cell[1216, 42, 180, 3, 30, "Subsubitem",ExpressionUUID->"c57a9421-8c19-48bd-8372-9f9c5fb3a88c"]
}, Open  ]]
}, Open  ]],
Cell[1423, 49, 1535, 51, 211, "Input",ExpressionUUID->"3d0daf5c-5f1e-437f-80f0-8385104cbf51"],
Cell[2961, 102, 221, 5, 30, "Subsubitem",ExpressionUUID->"f8904613-c286-42c1-b922-3590291993a0"],
Cell[CellGroupData[{
Cell[3207, 111, 916, 23, 98, "Input",ExpressionUUID->"eaa75cce-84f2-4b96-b53c-d9218d836fd1"],
Cell[4126, 136, 517, 12, 29, "Message",ExpressionUUID->"c2592b51-e705-4c17-8063-73966b7f1ef2"],
Cell[4646, 150, 529, 11, 49, "Output",ExpressionUUID->"be80783c-cd10-4021-b82f-a2869f6d05ee"],
Cell[5178, 163, 519, 12, 29, "Message",ExpressionUUID->"c8a1edf4-c253-4f1b-a332-3ae369e8520b"],
Cell[5700, 177, 398, 7, 49, "Output",ExpressionUUID->"1441db65-6a36-4aa0-8420-ce51d18cba2b"],
Cell[6101, 186, 519, 12, 29, "Message",ExpressionUUID->"2d424f3d-7807-4a0f-84d5-cea4b3188a6f"],
Cell[6623, 200, 509, 10, 49, "Output",ExpressionUUID->"18663145-d292-4713-aa8b-d6f4158db246"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7169, 215, 212, 4, 30, "Subsubitem",ExpressionUUID->"8a43628d-5dcb-469c-b134-fc61ee2c1d92"],
Cell[7384, 221, 201, 3, 30, "Subsubitem",ExpressionUUID->"5e8ed805-b9cd-47b8-ba22-e2214be56c12"],
Cell[7588, 226, 200, 3, 30, "Subsubitem",ExpressionUUID->"fcfa496f-65fe-4208-ae4a-d7704d6d7e5e"],
Cell[7791, 231, 208, 3, 30, "Subsubitem",ExpressionUUID->"32ebaa21-ac12-4058-b56b-00cc3b34fd13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8036, 239, 151, 3, 33, "Subitem",ExpressionUUID->"727f4567-0c68-4fe9-81bc-35567b8f1252"],
Cell[8190, 244, 1831, 49, 73, "Subsubitem",ExpressionUUID->"40b8ca58-367c-4a86-93e5-d5c56c68a24f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10058, 298, 2014, 59, 118, "Input",ExpressionUUID->"fa2598f5-ca85-4911-a3e6-3d3850377e43"],
Cell[12075, 359, 314, 4, 49, "Output",ExpressionUUID->"8287f8eb-a4de-4678-9a33-2a0617c14270"]
}, Open  ]],
Cell[12404, 366, 236, 5, 30, "Subsubitem",ExpressionUUID->"e3062a11-c2e7-4a20-a559-70523ed4ec4b"],
Cell[CellGroupData[{
Cell[12665, 375, 151, 3, 33, "Subitem",ExpressionUUID->"08c2d4d4-b951-4c81-9c7f-484f547eef4d"],
Cell[12819, 380, 275, 6, 30, "Subsubitem",ExpressionUUID->"aeeb52dd-d66c-452c-81fc-a7d569f2a4c3"]
}, Open  ]],
Cell[13109, 389, 1318, 39, 161, "Input",ExpressionUUID->"58286ba8-0db3-42e6-b114-c1d7f08d44d5"],
Cell[CellGroupData[{
Cell[14452, 432, 1176, 25, 49, "Input",ExpressionUUID->"e166366f-90cf-4df0-b561-1743bd669f62"],
Cell[15631, 459, 54620, 965, 315, "Output",ExpressionUUID->"5b190085-7c84-4fd3-9225-16a8eda76083"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70288, 1429, 151, 3, 33, "Subitem",ExpressionUUID->"12367e63-aeba-4556-b81b-282753b02822"],
Cell[70442, 1434, 732, 15, 73, "Subsubitem",ExpressionUUID->"adb80264-2c5a-437e-9448-dbe49228eff4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71211, 1454, 328, 7, 49, "Input",ExpressionUUID->"55ad8deb-c7ed-488e-92e9-2b6329fa76f2"],
Cell[71542, 1463, 545, 12, 29, "Message",ExpressionUUID->"3784dd66-861a-429d-8786-2097dc182404"],
Cell[72090, 1477, 459, 10, 49, "Output",ExpressionUUID->"bd59f60a-6b62-4cf9-911b-7722e76f110d"]
}, Open  ]],
Cell[72564, 1490, 431, 11, 30, "Subsubitem",ExpressionUUID->"69aa89f6-1347-4f69-8717-974542c56db9"],
Cell[CellGroupData[{
Cell[73020, 1505, 153, 3, 34, "Item",ExpressionUUID->"2f09093f-eeec-4ff0-af9c-daa0c123d68c"],
Cell[73176, 1510, 252, 4, 33, "Subitem",ExpressionUUID->"168db036-3a0b-476c-b622-1f7590af551c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73465, 1519, 1340, 31, 74, "Input",ExpressionUUID->"113c193f-84c4-4b56-9936-69d82a079d45"],
Cell[74808, 1552, 16919, 341, 307, "Output",ExpressionUUID->"08c3d1ba-309b-451d-981a-3c1fde1c574b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91764, 1898, 220, 5, 33, "Subitem",ExpressionUUID->"71c04f57-f3d2-42ee-807b-66d52221f889"],
Cell[91987, 1905, 730, 12, 58, "Subitem",ExpressionUUID->"ff67419d-96c8-4cac-bc4b-2260ef55de48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92754, 1922, 720, 20, 137, "Input",ExpressionUUID->"80beaec3-c908-4e09-8213-fe4986a2f16d"],
Cell[93477, 1944, 344, 5, 49, "Output",ExpressionUUID->"a03d0aa4-cf1f-4fea-995b-9d8ecf2d5669"]
}, Open  ]],
Cell[93836, 1952, 473, 9, 30, "Subsubitem",ExpressionUUID->"7fede101-a60f-4995-b617-bf4c65a0256e"],
Cell[94312, 1963, 577, 10, 58, "Subitem",ExpressionUUID->"24546c9f-c53b-4d0d-b631-2fedfb4e1405"],
Cell[CellGroupData[{
Cell[94914, 1977, 685, 19, 137, "Input",ExpressionUUID->"1447b98c-e1b1-4a4a-8f98-425547695642"],
Cell[95602, 1998, 318, 4, 49, "Output",ExpressionUUID->"8de6804b-2945-4d6d-a330-e5b44f55ad1e"]
}, Open  ]],
Cell[95935, 2005, 425, 8, 30, "Subsubitem",ExpressionUUID->"78e85d01-da35-4ca8-be90-b6c9c79f0938"],
Cell[CellGroupData[{
Cell[96385, 2017, 200, 4, 33, "Subitem",ExpressionUUID->"80212342-f36f-4b42-8c3d-afaf3027fa6d"],
Cell[96588, 2023, 542, 11, 52, "Subsubitem",ExpressionUUID->"9e589707-d391-41d6-91a6-ac3559dc01d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97167, 2039, 791, 18, 97, "Input",ExpressionUUID->"dd207f94-0427-42f1-b215-3611ca232ccc"],
Cell[97961, 2059, 547, 13, 49, "Output",ExpressionUUID->"648c7745-16bb-4e08-810f-df060f090215"]
}, Open  ]],
Cell[98523, 2075, 609, 10, 73, "Subsubitem",ExpressionUUID->"72c34b35-da14-4fe4-9903-8abfe6b0ba65"],
Cell[CellGroupData[{
Cell[99157, 2089, 432, 9, 49, "Input",ExpressionUUID->"6dd1e3b9-4142-44fe-b9f3-7c5c70f5e248"],
Cell[99592, 2100, 3688, 79, 296, "Output",ExpressionUUID->"81517796-d07b-4a5a-aa70-e20b45c8017d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103317, 2184, 265, 4, 74, "Input",ExpressionUUID->"0b034666-c72b-49ed-b5c5-2ee651f9706b"],
Cell[103585, 2190, 317, 4, 49, "Output",ExpressionUUID->"b6e628ff-a9e6-4dbd-9eec-e46f8518bbaf"],
Cell[103905, 2196, 318, 4, 49, "Output",ExpressionUUID->"480c1b88-fa5f-4d07-8d9f-4017e5b28970"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104260, 2205, 827, 22, 52, "Subsubitem",ExpressionUUID->"3dfd4d32-632c-4f9e-a956-2504cb8f63a9"],
Cell[105090, 2229, 742, 18, 52, "Subsubitem",ExpressionUUID->"dcd32251-4f58-4a9c-bd8c-75dd02ff20bb"]
}, Open  ]],
Cell[105847, 2250, 798, 20, 70, "Input",ExpressionUUID->"fec83f49-2029-47b3-a703-a315b23426f4"],
Cell[CellGroupData[{
Cell[106670, 2274, 516, 12, 49, "Input",ExpressionUUID->"ac39d507-68cd-4f72-b0fb-3f76dbda8470"],
Cell[107189, 2288, 80899, 1325, 206, "Output",ExpressionUUID->"cae2c902-951c-4355-82b1-19a2f54b8071"]
}, Open  ]],
Cell[188103, 3616, 289, 6, 30, "Subsubitem",ExpressionUUID->"cf1a165b-5c1c-4282-9419-e18af1239519"],
Cell[CellGroupData[{
Cell[188417, 3626, 584, 12, 122, "Input",ExpressionUUID->"fd2defff-fb53-4091-ba29-da53cc3553e5"],
Cell[189004, 3640, 248, 3, 49, "Output",ExpressionUUID->"bf4f0d80-37b0-409d-82fb-60f69bd84612"],
Cell[189255, 3645, 265, 3, 49, "Output",ExpressionUUID->"119fa6ae-ef8a-48bc-acb4-97d6a19ad0d8"],
Cell[189523, 3650, 265, 3, 49, "Output",ExpressionUUID->"84240a8e-2c9e-42c9-928b-ce679ce9cc90"],
Cell[189791, 3655, 247, 3, 49, "Output",ExpressionUUID->"aaf24451-7a35-4aa9-b57b-86620bb23d29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190075, 3663, 435, 6, 30, "Subsubitem",ExpressionUUID->"632266dd-c079-4c23-bdd7-25a8da03b2af"],
Cell[190513, 3671, 481, 8, 30, "Subsubitem",ExpressionUUID->"0db03697-69a6-432f-baf5-4b6b6665538f"],
Cell[190997, 3681, 480, 8, 30, "Subsubitem",ExpressionUUID->"f823c08a-c410-49fa-91d0-091dcd37b383"],
Cell[191480, 3691, 694, 11, 52, "Subsubitem",ExpressionUUID->"4faea69d-84ae-4aba-96de-9f9cee176d0b"]
}, Open  ]]
}
]
*)

